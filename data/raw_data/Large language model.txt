{{Short description|Neural network with billions of weights}}
{{Machine learning|Artificial neural network}}
A '''large language model''' ('''LLM''') is a [[language model]] characterized by its large size. Their size is enabled by [[AI accelerator]]s, which are able to process vast amounts of [[Text corpus|text data]], mostly [[Web scraping|scraped]] from the Internet.<ref name=":7">{{Cite web |date=2019-02-14 |title=Better Language Models and Their Implications |url=https://openai.com/blog/better-language-models/ |url-status=live |archive-url= https://web.archive.org/web/20201219132206/https://openai.com/blog/better-language-models/ |archive-date=2020-12-19 |access-date=2019-08-25 |website=OpenAI}}</ref> The [[artificial neural network]]s which are built can contain from tens of millions and up to billions of weights and are (pre-)trained using [[self-supervised learning]] and [[semi-supervised learning]]. [[Transformer (machine learning model)|Transformer]] architecture contributed to faster training.<ref>{{Cite web |last=Merritt |first=Rick |date=2022-03-25 |title=What Is a Transformer Model? |url=https://blogs.nvidia.com/blog/2022/03/25/what-is-a-transformer-model/ |access-date=2023-07-25 |website=NVIDIA Blog |language=en-US}}</ref> Alternative architectures include the [[mixture of experts]] (MoE), which has been proposed by Google, starting with sparsely-gated ones in 2017,<ref name="HGZCJ">{{Cite arXiv |last1=Shazeer |first1=Noam |last2=Mirhoseini |first2=Azalia |last3=Maziarz |first3=Krzysztof |last4=Davis |first4=Andy |last5=Le |first5=Quoc |last6=Hinton |first6=Geoffrey |last7=Dean |first7=Jeff |date=2017-01-01 |title=Outrageously Large Neural Networks: The Sparsely-Gated Mixture-of-Experts Layer |class=cs.LG |eprint=1701.06538}}</ref> Gshard in 2021<ref name="R9Qq5">{{Cite arXiv |last1=Lepikhin |first1=Dmitry |last2=Lee |first2=HyoukJoong |last3=Xu |first3=Yuanzhong |last4=Chen |first4=Dehao |last5=Firat |first5=Orhan |last6=Huang |first6=Yanping |last7=Krikun |first7=Maxim |last8=Shazeer |first8=Noam |last9=Chen |first9=Zhifeng |date=2021-01-12 |title=GShard: Scaling Giant Models with Conditional Computation and Automatic Sharding  |class=cs.CL |language=en |eprint=2006.16668}}</ref> to GLaM in 2022.<ref name="glam-blog" />

As language models, they work by taking an input text and repeatedly predicting the next token or word.<ref name="Bowman">{{cite arXiv |eprint=2304.00612 |class=cs.CL |first=Samuel R. |last=Bowman |title=Eight Things to Know about Large Language Models |year=2023}}</ref> Up to 2020, [[Fine-tuning (machine learning)|fine tuning]] was the only way a model could be adapted to be able to accomplish specific tasks. Larger sized models, such as [[GPT-3]], however, can be [[prompt engineering|prompt-engineered]] to achieve similar results.<ref name="few-shot-learners">{{cite journal |last1=Brown |first1=Tom B. |last2=Mann |first2=Benjamin |last3=Ryder |first3=Nick |last4=Subbiah |first4=Melanie |last5=Kaplan |first5=Jared |last6=Dhariwal |first6=Prafulla |last7=Neelakantan |first7=Arvind |last8=Shyam |first8=Pranav |last9=Sastry |first9=Girish |last10=Askell |first10=Amanda |last11=Agarwal |first11=Sandhini |last12=Herbert-Voss |first12=Ariel |last13=Krueger |first13=Gretchen |last14=Henighan |first14=Tom |last15=Child |first15=Rewon |date=Dec 2020 |editor1-last=Larochelle |editor1-first=H. |editor2-last=Ranzato |editor2-first=M. |editor3-last=Hadsell |editor3-first=R. |editor4-last=Balcan |editor4-first=M.F. |editor5-last=Lin |editor5-first=H. |title=Language Models are Few-Shot Learners |url=https://proceedings.neurips.cc/paper/2020/file/1457c0d6bfcb4967418bfb8ac142f64a-Paper.pdf |journal=Advances in Neural Information Processing Systems |publisher=Curran Associates, Inc. |volume=33 |pages=1877–1901 |last25=Chess |last20=Hesse |first20=Christopher |last21=Chen |first21=Mark |last22=Sigler |first22=Eric |last23=Litwin |first23=Mateusz |last24=Gray |first24=Scott |first26=Jack |first25=Benjamin |last26=Clark |last19=Winter |last27=Berner |first27=Christopher |last28=McCandlish |first28=Sam |last29=Radford |first29=Alec |last30=Sutskever |first30=Ilya |last31=Amodei |first31=Dario |first19=Clemens |first18=Jeffrey |last18=Wu |last16=Ramesh |first16=Aditya |last17=Ziegler |first17=Daniel M.}}</ref> They are thought to acquire [[Tacit knowledge#Embodied knowledge|embodied knowledge]] about syntax, semantics and "ontology" inherent in human language corpora, but also inaccuracies and biases present in the corpora.<ref name="Manning-2022">{{cite journal |last=Manning |first=Christopher D. |author-link=Christopher D. Manning |year=2022 |title=Human Language Understanding & Reasoning |url=https://www.amacad.org/publication/human-language-understanding-reasoning |journal=Daedalus |volume=151 |issue=2 |pages=127–138 |doi=10.1162/daed_a_01905 |s2cid=248377870|doi-access=free }}</ref>

Notable examples include [[OpenAI]]'s [[Generative_pre-trained_transformer|GPT]] models (e.g., [[GPT-3.5]] and [[GPT-4]], used in [[ChatGPT]]), [[Google]]'s [[PaLM]] (used in [[Google Bard|Bard]]), and [[Meta Platforms|Meta]]'s [[LLaMA|LLaMa]], as well as [[BLOOM (language model)|BLOOM]], [[Ernie Bot|Ernie 3.0 Titan]], and [[Anthropic#Claude|Claude]].

== Dataset preprocessing ==
{{See also|List of datasets for machine-learning research#Internet}}

===Probabilistic tokenization===
Using a modification of [[byte pair encoding|byte-pair encoding]], in the first step, all unique characters (including blanks and [[punctuation mark]]s) are treated as an initial set of [[n-grams]] (i.e. initial set of uni-grams). Successively the most frequent pair of adjacent characters is merged into a bi-gram and all instances of the pair are replaced by it. All occurrences of adjacent pairs of (previously merged) n-grams that most frequently occur together are then again merged into even lengthier n-gram repeatedly until a vocabulary of prescribed size is obtained (in case of [[GPT-3]], the size is 50257).<ref name="xbiWb">{{Cite web |title=OpenAI API |url=https://platform.openai.com/ |archive-url=https://web.archive.org/web/20230423211308/https://platform.openai.com/tokenizer |archive-date=April 23, 2023 |access-date=2023-04-30 |website=platform.openai.com |language=en}}</ref> Token vocabulary consists of [[integers]], spanning from zero up to the size of the token vocabulary. New words can always be interpreted as combinations of the tokens and the initial-set uni-grams.<ref name="2022Book_">{{cite book |last1=Paaß  |first1=Gerhard |url= https://link.springer.com/chapter/10.1007/978-3-031-23190-2_2 |title=Foundation Models for Natural Language Processing |last2=Giesselbach |first2=Sven |date= 2022 |doi=10.1007/978-3-031-23190-2_2 |isbn=9783031231902 |access-date=3 August 2023}}</ref> 

A token vocabulary based on the frequencies extracted from mainly English corpora uses as few tokens as possible for an average English word. An average word in another language encoded by such an English-optimized tokenizer is however split into suboptimal amount of tokens.

<small><code>tokenizer: texts -> series of numerical "tokens"</code></small> may be split into:

{| class="wikitable"
|-
| n-grams: ||bgcolor="#e0e0e0" | ''token'' || ''izer'' || bgcolor="#e0e0e0" | ''''':''''' || ''texts'' || bgcolor="#e0e0e0" | <code>-></code> || ''series'' || bgcolor="#e0e0e0" | ''of'' || ''numerical'' || bgcolor="#e0e0e0" | " || ''t'' || bgcolor="#e0e0e0" | ''ok'' || ''ens'' || bgcolor="#e0e0e0" | "
|-
| numbers as "tokens": || bgcolor="#e0e0e0" | 30001 || 7509 || bgcolor="#e0e0e0" | 25 || 13399 || bgcolor="#e0e0e0" | 4613 || 2168 || bgcolor="#e0e0e0" | 286 ||  29052 || bgcolor="#e0e0e0" | 366 || 83 || bgcolor="#e0e0e0" | 482 || 641 || bgcolor="#e0e0e0" | 1
|}

Probabilistic tokenization also [[Data compression|compress]]es the datasets, which is the reason for using the [[byte pair encoding]] algorithm as a tokenizer. Because LLMs generally require input to be an array that is not [[Jagged array|jagged]], the shorter texts must be "padded" until they match the length of the longest one. How many tokens are, on average, needed per word depends on the language of the dataset.<ref>{{Cite web|url=https://blog.yenniejun.com/p/all-languages-are-not-created-tokenized |title=All languages are NOT created (tokenized) equal |author=Yennie Jun |date=2023-05-03|access-date=2023-08-17|quote=In other words, to express the same sentiment, some languages require up to 10 times more tokens.|website=Language models cost much more in some languages than others}}</ref>{{better source|date=August 2023}}

===Dataset cleaning===
Removal of toxic passages from the dataset, discarding low-quality data, and de-duplication are examples of [[Data cleansing|dataset cleaning]].<ref name="aYNg4">{{Cite arXiv |eprint=2104.08758 |class=cs.CL |first1=Jesse |last1=Dodge |first2=Maarten |last2=Sap |title=Documenting Large Webtext Corpora: A Case Study on the Colossal Clean Crawled Corpus |last3=Marasović |first3=Ana |last4=Agnew |first4=William |last5=Ilharco |first5=Gabriel |last6=Groeneveld |first6=Dirk |last7=Mitchell |first7=Margaret |last8=Gardner |first8=Matt |year=2021}}</ref> Resulting, cleaned (high-quality) datasets contain up to 17 trillion words in 2022, raising from 985 million words, used in 2018 for [[GPT-1]],<ref name="TzrRM">{{cite book |last1=Zhu |first1=Yukun |title=2015 IEEE International Conference on Computer Vision (ICCV) |last2=Kiros |first2=Ryan |last3=Zemel |first3=Rich |last4=Salakhutdinov |first4=Ruslan |last5=Urtasun |first5=Raquel |last6=Torralba |first6=Antonio |last7=Fidler |first7=Sanja |date=December 2015 |isbn=978-1-4673-8391-2 |pages=19–27 |chapter=Aligning Books and Movies: Towards Story-Like Visual Explanations by Watching Movies and Reading Books |doi=10.1109/ICCV.2015.11 |access-date=11 April 2023 |chapter-url=https://www.cv-foundation.org/openaccess/content_iccv_2015/papers/Zhu_Aligning_Books_and_ICCV_2015_paper.pdf |arxiv=1506.06724 |s2cid=6866988}}</ref> and 3.3 billion words, used for [[BERT (language model)|BERT]].<ref name="jm" /> The future data is, however, expected to be increasingly "contaminated" by LLM-generated contents themselves.<ref name="qbFw1">{{Cite arXiv |eprint=2005.14165 |class=cs.CL |first1=Tom B. |last1=Brown |first2=Benjamin |last2=Mann |title=Language Models are Few-Shot Learners |last3=Ryder |first3=Nick |last4=Subbiah |first4=Melanie |last5=Kaplan |first5=Jared |last6=Dhariwal |first6=Prafulla |last7=Neelakantan |first7=Arvind |last8=Shyam |first8=Pranav |last9=Sastry |first9=Girish |last10=Askell |first10=Amanda |last11=Agarwal |first11=Sandhini |last12=Herbert-Voss |first12=Ariel |last13=Krueger |first13=Gretchen |last14=Henighan |first14=Tom |last15=Child |first15=Rewon |last16=Ramesh |first16=Aditya |last17=Ziegler |first17=Daniel M. |last18=Wu |first18=Jeffrey |last19=Winter |first19=Clemens |last20=Hesse |first20=Christopher |last21=Chen |first21=Mark |last22=Sigler |first22=Eric |last23=Litwin |first23=Mateusz |last24=Gray |first24=Scott |last25=Chess |first25=Benjamin |last26=Clark |first26=Jack |last27=Berner |first27=Christopher |last28=McCandlish |first28=Sam |last29=Radford |first29=Alec |last30=Sutskever |first30=Ilya |year=2020 |display-authors=1}}</ref>

== Training and architecture details ==
{{See also|Fine-tuning (machine learning)}}

=== Reinforcement learning from human feedback (RLHF)===
[[Reinforcement learning from human feedback]] (RLHF) through algorithms, such as [[Proximal Policy Optimization|proximal policy optimization]], is used to furtherly fine-tune a model based on a dataset of human preferences.<ref name="instructGPT-paper">{{Cite arXiv |eprint=2203.02155 |class=cs.CL |first1=Long |last1=Ouyang |first2=Jeff |last2=Wu |title=Training language models to follow instructions with human feedback |date=2022 |last3=Jiang |first3=Xu |last4=Almeida |first4=Diogo |last5=Wainwright |first5=Carroll L. |last6=Mishkin |first6=Pamela |last7=Zhang |first7=Chong |last8=Agarwal |first8=Sandhini |last9=Slama |first9=Katarina |last10=Ray |first10=Alex |last11=Schulman |first11=John |last12=Hilton |first12=Jacob |last13=Kelton |first13=Fraser |last14=Miller |first14=Luke |last15=Simens |first15=Maddie |last16=Askell |first16=Amanda |last17=Welinder |first17=Peter |last18=Christiano |first18=Paul |last19=Leike |first19=Jan |last20=Lowe |first20=Ryan}}</ref>

=== Instruction tuning ===
Using "self-instruct" approaches, LLMs have been able to [[Bootstrapping|bootstrap]] correct responses, replacing any naive responses, starting from human-generated corrections of a few cases. For example, in the instruction "Write an essay about the main themes represented in Hamlet," an initial naive completion might be 'If you submit the essay after March 17, your grade will be reduced by 10% for each day of delay," based on the frequency of this textual sequence in the corpus.<ref name="self-instruct-paper">{{Cite arXiv |eprint=2212.10560 |class=cs.CL |first1=Yizhong |last1=Wang |first2=Yeganeh |last2=Kordi |title=Self-Instruct: Aligning Language Model with Self Generated Instructions |date=2022 |last3=Mishra |first3=Swaroop |last4=Liu |first4=Alisa |last5=Smith |first5=Noah A. |last6=Khashabi |first6=Daniel |last7=Hajishirzi |first7=Hannaneh}}</ref>

=== Prompt engineering, attention mechanism, and context window ===
{{See also|Prompt engineering|Attention (machine learning)}}
Most results previously achievable only by (costly) fine-tuning, can be achieved through [[prompt engineering]], although limited to the scope of a single conversation (more precisely, limited to the scope of a context window).<ref name="emergentpaper" /> 
[[File:Multiple_attention_heads.png |300px|thumb | When each head calculates, according to its own criteria, how much other tokens are relevant for the "it_" token, note that the second attention head, represented by the second column, is focusing most on the first two rows, i.e. the tokens "The" and "animal", while the third column is focusing most on the bottom two rows, i.e. on "tired", which has been tokenized into two tokens.<ref name="Jay_Allamar">{{Cite web | last=Allamar | first=Jay | title=Illustrated transformer |url=https://jalammar.github.io/illustrated-transformer/ |access-date=2023-07-29 |language=en}}</ref>]]

In order to find out which tokens are relevant to each other within the scope of the context window, the attention mechanism calculates "soft" weights for each token, more precisely for its embedding, by using multiple attention heads, each with its own "relevance" for calculating its own soft weights. For example, the small (i.e. 117M parameter sized) [[GPT-2]] model, has had twelve attention heads and a context window of only 1k token.<ref name="Jay_Allamar_GPT2">{{Cite web | last=Allamar | first=Jay  | title=The Illustrated GPT-2 (Visualizing Transformer Language Models) |url=https://jalammar.github.io/illustrated-gpt2/ |access-date=2023-08-01 |language=en}}</ref> 
In its medium version it has 345M parameters and contains 24 layers,
each with 12 attention heads. For the training with gradient descent a batch size of 512 was utilized.<ref name="2022Book_">{{cite book |last1=Paaß  |first1=Gerhard |url= https://link.springer.com/chapter/10.1007/978-3-031-23190-2_2 |title=Foundation Models for Natural Language Processing |last2=Giesselbach |first2=Sven |date= 2022 |doi=10.1007/978-3-031-23190-2_2 |isbn=9783031231902 |access-date=3 August 2023}}</ref>

The largest models can have a context window sized up to 32k (for example, [[GPT-4]]; while [[GPT-3.5]] has a context window sized from 4k to 16k, and legacy GPT-3 has had 2k sized context window).<ref name="ng1G8">{{Cite web |title=OpenAI API |url=https://platform.openai.com/ |url-status=deviated |archive-url=https://archive.today/20230620140700/https://platform.openai.com/docs/models/gpt-3-5 |archive-date=20 June 2023 |access-date=2023-06-20 |website=platform.openai.com |language=en}}</ref>

Length of a conversation that the model can take into account when generating its next answer is limited by the size of a context window, as well. If the length of a conversation, for example with [[Chat-GPT]], is longer than its context window, only the parts inside the context window are  taken into account when generating the next answer, or the model needs to apply some algorithm to summarize the too distant parts of conversation.

The shortcomings of making a context window larger-sized include higher computational cost and possibly diluting the focus on local context, while making it smaller-sized can cause a model to miss an important long-range dependency. Balancing them are a matter of experimentation and domain-specific considerations.

A model may be pre-trained either to predict how the segment continues, or what is missing in the segment, given a segment from its training dataset.<ref name="ioUpE">{{cite book |last1=Zaib |first1=Munazza |last2=Sheng |first2=Quan Z. |last3=Emma Zhang |first3=Wei |title=Proceedings of the Australasian Computer Science Week Multiconference |chapter=A Short Survey of Pre-trained Language Models for Conversational AI-A New Age in NLP |date=4 February 2020 |chapter-url=https://www.researchgate.net/publication/338931711 |pages=1–4 |arxiv=2104.10810 |doi=10.1145/3373017.3373028 |isbn=9781450376976 |s2cid=211040895}}</ref> It can be either

* autoregressive (i.e. predicting how the segment continues, the way [[Generative pretrained transformer|GPTs]] do it): for example given a segment "I like to eat", the model predicts "ice cream", or
* "[[Cloze test|masked]]" (i.e. filling in the parts missing from the segment, the way "BERT"<ref name="jm">{{cite book |last1=Jurafsky |first1=Dan |url=https://web.stanford.edu/~jurafsky/slp3/ed3book_jan72023.pdf |title=Speech and Language Processing |last2=Martin |first2=James H. |date=7 January 2023 |edition=3rd edition draft |access-date=24 May 2022}}</ref> does it): for example, given a segment "I like to <code>[__] [__]</code> cream", the model predicts that "eat" and "ice" are missing.

Models may be trained on auxiliary tasks which test their understanding of the data distribution, such as Next Sentence Prediction (NSP), in which pairs of sentences are presented and the model must predict whether they appear consecutively in the training corpus.<ref name="jm" /> During training, [[Regularization (mathematics)|regularization]] loss is also used to stabilize training. However regularization loss is usually not used during [[Training, validation, and test data sets|testing]] and evaluation.

== Training cost ==
Advances in software and hardware have reduced the cost substantially since 2020, such that in 2023 training of a 12-billion-parameter LLM computational cost is 72,300 [[Ampere (microarchitecture)|A100-GPU]]-hours, while in 2020 the cost of training a 1.5-billion-parameter LLM (which was two orders of magnitude smaller than the state of the art in 2020) was between $80 thousand and $1.6 million.<ref name="Wiggers">{{cite web |last=Wiggers |first=Kyle |date=28 April 2022 |title=The emerging types of language models and why they matter |url=https://techcrunch.com/2022/04/28/the-emerging-types-of-language-models-and-why-they-matter/ |work=TechCrunch}}</ref><ref name="xaytj">{{cite arXiv |eprint=2004.08900 |class=cs.CL |first1=Or |last1=Sharir |first2=Barak |last2=Peleg |title=The Cost of Training NLP Models: A Concise Overview |last3=Shoham |first3=Yoav |year=2020}}</ref><ref name="Pythia">{{cite arXiv |eprint=2304.01373 |class=cs.CL |first1=Stella |last1=Biderman |first2=Hailey |last2=Schoelkopf |title=Pythia: A Suite for Analyzing Large Language Models Across Training and Scaling |date=April 2023 |last3=Anthony |first3=Quentin |last4=Bradley |first4=Herbie |last5=Khan |first5=Mohammad Aflah |last6=Purohit |first6=Shivanshu |last7=Prashanth |first7=USVSN Sai}}</ref> Since 2020, large sums were invested into increasingly large models. For example, training of the GPT-2 (i.e. a 1.5-billion-parameters model) in 2019 cost $50,000, while training of the PaLM (i.e. a 540-billion-parameters model) in 2022 cost $8 million.<ref name="0BrVG">{{cite news |last1=Vincent |first1=James |date=3 April 2023 |title=AI is entering an era of corporate control |work=The Verge |url=https://www.theverge.com/23667752/ai-progress-2023-report-stanford-corporate-control |access-date=19 June 2023}}</ref>

For Transformer-based LLM, training cost is much higher than inference cost. It costs 6 [[FLOPS|FLOPs]] per parameter to train on one token, whereas it costs 1 to 2 FLOPs per parameter to infer on one token.{{Citation needed|date=September 2023|reason=The cited paper neither substantiates the claim of training being computationally costlier than inference in general for transformer based LLMs, nor does it enumerate those FLOPs per parameter per token figures.}}

== Tool use ==
There are certain tasks that, in principle, cannot be solved by any LLM, at least not without the use of external tools or additional software. An example of such a task is responding to the user's input '354 * 139 = ', provided that the LLM has not already encountered a continuation of this calculation in its training corpus. In such cases, the LLM needs to resort to running program code that calculates the result, which can then be included in its response. Another example is 'What is the time now? It is ', where a separate program interpreter would need to execute a code to get system time on the computer, so LLM could include it in its reply.<ref name="PI1fW">{{Cite arXiv |eprint=2211.10435 |class=cs.CL |first1=Luyu |last1=Gao |first2=Aman |last2=Madaan |title=PAL: Program-aided Language Models |date=2022-11-01 |last3=Zhou |first3=Shuyan |last4=Alon |first4=Uri |last5=Liu |first5=Pengfei |last6=Yang |first6=Yiming |last7=Callan |first7=Jamie |last8=Neubig |first8=Graham}}</ref><ref name="J5OW5">{{Cite web |title=PAL: Program-aided Language Models |url=https://reasonwithpal.com/ |access-date=2023-06-12 |website=reasonwithpal.com}}</ref> This basic strategy can be sophisticated with multiple attempts of generated programs, and other sampling strategies.<ref name="gQxzq">{{Cite arXiv |eprint=2303.09014 |class=cs.CL |first1=Bhargavi |last1=Paranjape |first2=Scott |last2=Lundberg |title=ART: Automatic multi-step reasoning and tool-use for large language models |date=2023-03-01 |last3=Singh |first3=Sameer |last4=Hajishirzi |first4=Hannaneh |last5=Zettlemoyer |first5=Luke |last6=Tulio Ribeiro |first6=Marco}}</ref>

Generally, in order to get an LLM to use tools, one must finetune it for tool-use. If the number of tools is finite, then finetuning may be done just once. If the number of tools can grow arbitrarily, as with online [[API]] services, then the LLM can be finetuned to be able to read API documentation and call API correctly.<ref name="lLrda">{{Cite arXiv |eprint=2303.16434 |class=cs.AI |first1=Yaobo |last1=Liang |first2=Chenfei |last2=Wu |title=TaskMatrix.AI: Completing Tasks by Connecting Foundation Models with Millions of APIs |date=2023-03-01 |last3=Song |first3=Ting |last4=Wu |first4=Wenshan |last5=Xia |first5=Yan |last6=Liu |first6=Yu |last7=Ou |first7=Yang |last8=Lu |first8=Shuai |last9=Ji |first9=Lei |last10=Mao |first10=Shaoguang |last11=Wang |first11=Yun |last12=Shou |first12=Linjun |last13=Gong |first13=Ming |last14=Duan |first14=Nan}}</ref><ref name="4Xzrs">{{Cite arXiv |last1=Patil |first1=Shishir G. |last2=Zhang |first2=Tianjun |last3=Wang |first3=Xin |last4=Gonzalez |first4=Joseph E. |date=2023-05-01 |title=Gorilla: Large Language Model Connected with Massive APIs |class=cs.CL |eprint=2305.15334}}</ref>

A simpler form of tool use is ''Retrieval Augmented Generation'': augment an LLM with [[document retrieval]], sometimes using a [[vector database]]. Given a query, a document retriever is called to retrieve the most relevant (usually measured by first encoding the query and the documents into vectors, then finding the documents with vectors closest in Euclidean norm to the query vector). The LLM then generates an output based on both the query and the retrieved documents.<ref name="BUZBP">{{Cite journal |last1=Lewis |first1=Patrick |last2=Perez |first2=Ethan |last3=Piktus |first3=Aleksandra |last4=Petroni |first4=Fabio |last5=Karpukhin |first5=Vladimir |last6=Goyal |first6=Naman |last7=Küttler |first7=Heinrich |last8=Lewis |first8=Mike |last9=Yih |first9=Wen-tau |last10=Rocktäschel |first10=Tim |last11=Riedel |first11=Sebastian |last12=Kiela |first12=Douwe |date=2020 |title=Retrieval-Augmented Generation for Knowledge-Intensive NLP Tasks |url=https://proceedings.neurips.cc/paper/2020/hash/6b493230205f780e1bc26945df7481e5-Abstract.html |journal=Advances in Neural Information Processing Systems |publisher=Curran Associates, Inc. |volume=33 |pages=9459–9474 |arxiv=2005.11401}}</ref>

== Agency ==
An LLM is a language model, which is not an agent as it has no goal, but it can be used as a component of an [[intelligent agent]].<ref name="CFuti">{{Cite journal |last1=Huang |first1=Wenlong |last2=Abbeel |first2=Pieter |last3=Pathak |first3=Deepak |last4=Mordatch |first4=Igor |date=2022-06-28 |title=Language Models as Zero-Shot Planners: Extracting Actionable Knowledge for Embodied Agents |url=https://proceedings.mlr.press/v162/huang22a.html |journal=Proceedings of the 39th International Conference on Machine Learning |language=en |publisher=PMLR |pages=9118–9147|arxiv=2201.07207 }}</ref> Researchers have described several methods for such integrations.

The ReAct ("Reason+Act") method constructs an [[Intelligent agent|agent]] out of an LLM, using the LLM as a planner. The LLM is prompted to "think out loud". Specifically, the language model is prompted with a textual description of the environment, a goal, a list of possible actions, and a record of the actions and observations so far. It generates one or more thoughts before generating an action, which is then executed in the environment.<ref name="DmvNE">{{Cite arXiv |eprint=2210.03629 |class=cs.CL |first1=Shunyu |last1=Yao |first2=Jeffrey |last2=Zhao |title=ReAct: Synergizing Reasoning and Acting in Language Models |date=2022-10-01 |last3=Yu |first3=Dian |last4=Du |first4=Nan |last5=Shafran |first5=Izhak |last6=Narasimhan |first6=Karthik |last7=Cao |first7=Yuan}}</ref> The linguistic description of the environment given to the LLM planner can even be the LaTeX code of a paper describing the environment.<ref name="JS8Vd">{{Cite arXiv |eprint=2305.15486 |class=cs.AI |first1=Yue |last1=Wu |first2=Shrimai |last2=Prabhumoye |title=SPRING: GPT-4 Out-performs RL Algorithms by Studying Papers and Reasoning |date=24 May 2023 |last3=Min |first3=So Yeon}}</ref>

In the DEPS ("Describe, Explain, Plan and Select") method, an LLM is first connected to the visual world via image descriptions, then it is prompted to produce plans for complex tasks and behaviors based on its pretrained knowledge and environmental feedback it receives.<ref>{{Cite arXiv |eprint=2302.01560 |class=cs.AI |first1=Zihao |last1=Wang |first2=Shaofei |last2=Cai |title=Describe, Explain, Plan and Select: Interactive Planning with Large Language Models Enables Open-World Multi-Task Agents |date=2023-02-03 |last3=Liu |first3=Anji |last4=Ma |first4=Xiaojian |last5=Liang |first5=Yitao}}</ref>

The Reflexion method<ref name="sbB2T">{{Cite arXiv |last1=Shinn |first1=Noah |last2=Cassano |first2=Federico |last3=Labash |first3=Beck |last4=Gopinath |first4=Ashwin |last5=Narasimhan |first5=Karthik |last6=Yao |first6=Shunyu |date=2023-03-01 |title=Reflexion: Language Agents with Verbal Reinforcement Learning  |class=cs.AI |eprint=2303.11366}}</ref> constructs an agent that learns over multiple episodes. At the end of each episode, the LLM is given the record of the episode, and prompted to think up "lessons learned", which would help it perform better at a subsequent episode. These "lessons learned" are given to the agent in the subsequent episodes.

[[Monte Carlo tree search]] can use an LLM as rollout heuristic. When a programmatic world model is not available, an LLM can also be prompted with a description of the environment to act as world model.<ref name="ltTer">{{Cite arXiv |eprint=2305.14992 |class=cs.CL |first1=Shibo |last1=Hao |first2=Yi |last2=Gu |title=Reasoning with Language Model is Planning with World Model |date=2023-05-01 |last3=Ma |first3=Haodi |last4=Jiahua Hong |first4=Joshua |last5=Wang |first5=Zhen |last6=Zhe Wang |first6=Daisy |last7=Hu |first7=Zhiting}}</ref>

For open-ended exploration, an LLM can be used to score observations for their "interestingness", which can be used as a reward signal to guide a normal (non-LLM) reinforcement learning agent.<ref name="mBvD9">{{Cite arXiv |eprint=2306.01711 |class=cs.AI |first1=Jenny |last1=Zhang |first2=Joel |last2=Lehman |title=OMNI: Open-endedness via Models of human Notions of Interestingness |date=2 June 2023 |last3=Stanley |first3=Kenneth |last4=Clune |first4=Jeff}}</ref> Alternatively, it can [[Zone of proximal development|propose increasingly difficult tasks]] for [[curriculum learning]].<ref name=":0">{{Cite web |title=Voyager {{!}} An Open-Ended Embodied Agent with Large Language Models |url=https://voyager.minedojo.org/ |access-date=2023-06-09 |website=voyager.minedojo.org}}</ref> Instead of outputting individual actions, an LLM planner can also construct "skills", or [[Function (computer programming)|functions]] for complex action sequences. The skills can be stored and later invoked, allowing increasing levels of abstraction in planning.<ref name=":0" />

LLM-powered agents can keep a long-term memory of its previous contexts, and the memory can be retrieved in the same way as Retrieval Augmented Generation. Multiple such agents can interact socially.<ref name="XuvjF">{{Cite arXiv |last1=Park |first1=Joon Sung |last2=O'Brien |first2=Joseph C. |last3=Cai |first3=Carrie J. |last4=Ringel Morris |first4=Meredith |last5=Liang |first5=Percy |last6=Bernstein |first6=Michael S. |date=2023-04-01 |title=Generative Agents: Interactive Simulacra of Human Behavior |class=cs.HC |eprint=2304.03442}}</ref>

== Compression ==
Typically, LLM are trained with full- or half-precision floating point numbers (float32 and float16). One float16 has 16 bits, or 2 bytes, and so one billion parameters require 2 gigabytes. The largest models typically have 100 billion parameters, requiring 200 gigabytes to load, which places them outside the range of most consumer electronics.

''Post-training [[Quantization (signal processing)|quantization]]''<ref name="LS2Go">{{Cite journal |last1=Nagel |first1=Markus |last2=Amjad |first2=Rana Ali |last3=Baalen |first3=Mart Van |last4=Louizos |first4=Christos |last5=Blankevoort |first5=Tijmen |date=2020-11-21 |title=Up or Down? Adaptive Rounding for Post-Training Quantization |url=https://proceedings.mlr.press/v119/nagel20a.html |journal=Proceedings of the 37th International Conference on Machine Learning |language=en |publisher=PMLR |pages=7197–7206}}</ref> aims to decrease the space requirement by lowering precision of the parameters of a trained model, while preserving most of its performance.<ref name="cpzcK">{{Cite arXiv |eprint=1802.05668 |class=cs.NE |first1=Antonio |last1=Polino |first2=Razvan |last2=Pascanu |title=Model compression via distillation and quantization |date=2018-02-01 |last3=Alistarh |first3=Dan}}</ref><ref name="QVU95">{{Cite arXiv |eprint=2210.17323 |class=cs.LG |first1=Elias |last1=Frantar |first2=Saleh |last2=Ashkboos |title=GPTQ: Accurate Post-Training Quantization for Generative Pre-trained Transformers |date=2022-10-01 |last3=Hoefler |first3=Torsten |last4=Alistarh |first4=Dan}}</ref> The simplest form of quantization simply truncates all numbers to a given number of bits. It can be improved by using a different quantization [[Block cipher|codebook]] per layer. Further improvement can be done by applying [[Mixed-precision arithmetic|different precisions]] to different parameters, with higher precision for particularly important parameters ("outlier weights").<ref name="dU9Bu">{{Cite arXiv |eprint=2306.03078 |class=cs.CL |first1=Tim |last1=Dettmers |first2=Ruslan |last2=Svirschevski |title=SpQR: A Sparse-Quantized Representation for Near-Lossless LLM Weight Compression |date=2023-06-01 |last3=Egiazarian |first3=Vage |last4=Kuznedelev |first4=Denis |last5=Frantar |first5=Elias |last6=Ashkboos |first6=Saleh |last7=Borzunov |first7=Alexander |last8=Hoefler |first8=Torsten |last9=Alistarh |first9=Dan}}</ref>

While quantized models are typically frozen, and only pre-quantized models are finetuned, quantized models can still be finetuned.<ref name="D0nFA">{{Cite arXiv |eprint=2305.14314 |class=cs.LG |first1=Tim |last1=Dettmers |first2=Artidoro |last2=Pagnoni |title=QLoRA: Efficient Finetuning of Quantized LLMs |date=2023-05-01 |last3=Holtzman |first3=Ari | author-link3=Ari Holtzman |last4=Zettlemoyer |first4=Luke}}</ref>

== Multimodality ==
Multimodality means "having several modalities", and a [[Modality (human–computer interaction)|"modality"]] means a type of input, such as video, image, audio, text, [[proprioception]], etc.<ref>{{Cite journal |last1=Kiros |first1=Ryan |last2=Salakhutdinov |first2=Ruslan |last3=Zemel |first3=Rich |date=2014-06-18 |title=Multimodal Neural Language Models |url=https://proceedings.mlr.press/v32/kiros14.html |journal=Proceedings of the 31st International Conference on Machine Learning |language=en |publisher=PMLR |pages=595–603}}</ref> There have been many AI models trained specifically to ingest one modality and output another modality, such as [[AlexNet]] for image to label,<ref>{{Cite journal |last1=Krizhevsky |first1=Alex |last2=Sutskever |first2=Ilya |last3=Hinton |first3=Geoffrey E |date=2012 |title=ImageNet Classification with Deep Convolutional Neural Networks |url=https://proceedings.neurips.cc/paper/2012/hash/c399862d3b9d6b76c8436e924a68c45b-Abstract.html |journal=Advances in Neural Information Processing Systems |publisher=Curran Associates, Inc. |volume=25}}</ref> [[visual question answering]] for image-text to text,<ref>{{Cite journal |last1=Antol |first1=Stanislaw |last2=Agrawal |first2=Aishwarya |last3=Lu |first3=Jiasen |last4=Mitchell |first4=Margaret |last5=Batra |first5=Dhruv |last6=Zitnick |first6=C. Lawrence |last7=Parikh |first7=Devi |date=2015 |title=VQA: Visual Question Answering |url=https://openaccess.thecvf.com/content_iccv_2015/html/Antol_VQA_Visual_Question_ICCV_2015_paper.html |pages=2425–2433}}</ref> and [[speech recognition]] for speech to text. A review article of multimodal LLM is.<ref>{{Cite arXiv |last1=Yin |first1=Shukang |last2=Fu |first2=Chaoyou |last3=Zhao |first3=Sirui |last4=Li |first4=Ke |last5=Sun |first5=Xing |last6=Xu |first6=Tong |last7=Chen |first7=Enhong |date=2023-06-01 |title=A Survey on Multimodal Large Language Models |class=cs.CV |eprint=2306.13549 }}</ref>

A common method to create multimodal models out of an LLM is to "tokenize" the output of a trained encoder. Concretely, one can construct a LLM that can understand images as follows: take a trained LLM, and take a trained image encoder <math>E</math>. Make a small multilayered perceptron <math>f</math>, so that for any image <math>y</math>, the post-processed vector <math>f(E(y))</math> has the same dimensions as an encoded token. That is an "image token". Then, one can interleave text tokens and image tokens. The compound model is then finetuned on an image-text dataset. This basic construction can be applied with more sophistication to improve the model. The image encoder may be frozen to improve stability.<ref>{{Cite arXiv |last1=Li |first1=Junnan |last2=Li |first2=Dongxu |last3=Savarese |first3=Silvio |last4=Hoi |first4=Steven |date=2023-01-01 |title=BLIP-2: Bootstrapping Language-Image Pre-training with Frozen Image Encoders and Large Language Models |class=cs.CV |eprint=2301.12597 }}</ref>

Flamingo demonstrated the effectiveness of the tokenization method, finetuning a pair of pretrained language model and image encoder to perform better on visual question answering than models trained from scratch.<ref>{{Cite journal |last1=Alayrac |first1=Jean-Baptiste |last2=Donahue |first2=Jeff |last3=Luc |first3=Pauline |last4=Miech |first4=Antoine |last5=Barr |first5=Iain |last6=Hasson |first6=Yana |last7=Lenc |first7=Karel |last8=Mensch |first8=Arthur |last9=Millican |first9=Katherine |last10=Reynolds |first10=Malcolm |last11=Ring |first11=Roman |last12=Rutherford |first12=Eliza |last13=Cabi |first13=Serkan |last14=Han |first14=Tengda |last15=Gong |first15=Zhitao |date=2022-12-06 |title=Flamingo: a Visual Language Model for Few-Shot Learning |url=https://proceedings.neurips.cc/paper_files/paper/2022/hash/960a172bc7fbf0177ccccbb411a7d800-Abstract-Conference.html |journal=Advances in Neural Information Processing Systems |language=en |volume=35 |pages=23716–23736|arxiv=2204.14198 }}</ref> [[Pathways Language Model|Google PaLM]] model was finetuned into a multimodal model PaLM-E using the tokenization method, and applied to robotic control.<ref>{{Cite arXiv |last1=Driess |first1=Danny |last2=Xia |first2=Fei |last3=Sajjadi |first3=Mehdi S. M. |last4=Lynch |first4=Corey |last5=Chowdhery |first5=Aakanksha |last6=Ichter |first6=Brian |last7=Wahid |first7=Ayzaan |last8=Tompson |first8=Jonathan |last9=Vuong |first9=Quan |last10=Yu |first10=Tianhe |last11=Huang |first11=Wenlong |last12=Chebotar |first12=Yevgen |last13=Sermanet |first13=Pierre |last14=Duckworth |first14=Daniel |last15=Levine |first15=Sergey |date=2023-03-01 |title=PaLM-E: An Embodied Multimodal Language Model |class=cs.LG |eprint=2303.03378 }}</ref> [[LLaMA]] models have also been turned multimodal using the tokenization method, to allow image inputs,<ref>{{Cite arXiv|last1=Liu |first1=Haotian |last2=Li |first2=Chunyuan |last3=Wu |first3=Qingyang |last4=Lee |first4=Yong Jae |date=2023-04-01 |title=Visual Instruction Tuning |class=cs.CV |eprint=2304.08485 }}</ref> and video inputs.<ref>{{Cite arXiv|last1=Zhang |first1=Hang |last2=Li |first2=Xin |last3=Bing |first3=Lidong |date=2023-06-01 |title=Video-LLaMA: An Instruction-tuned Audio-Visual Language Model for Video Understanding |class=cs.CL |eprint=2306.02858 }}</ref>

[[GPT-4]] can use both text and image as inputs,<ref>{{Cite arXiv |eprint=2303.08774 |class=cs.CL |last=OpenAI |title=GPT-4 Technical Report |date=2023-03-27}}</ref> while [[Google Gemini]] is expected to be multimodal.<ref>{{Citation |last=Pichai |first=Sundar |title=Google Keynote (Google I/O '23) |url=https://www.youtube.com/watch?v=cNfINi5CNbY&t=931s |access-date=2023-07-02 |at=timestamp 15:31 |language=en}}</ref> <!-- update this in 2024 -->

== Properties ==
=== Scaling laws and emergent abilities ===
{{Main|Neural scaling law}}
The following four hyper-parameters characterize a LLM: 
* cost of (pre-)training (<small><math>C</math></small>), 
* size of the [[artificial neural network]] itself, such as number of parameters <small><math>N</math></small> (i.e. amount of neurons in its layers, amount of weights between them and biases), 
* size of its (pre-)training dataset (i.e. number of tokens in corpus, <small><math>D</math></small>), 
* performance after (pre-)training.

They are related by simple [[Empirical statistical laws|statistical laws]], called "scaling laws". One particular scaling law ("[[Chinchilla AI|Chinchilla scaling]]") for LLM autoregressively trained for one epoch, with a [[Log-log plot|log-log]] [[learning rate]] schedule, states that:<ref name="fJta3">{{Cite arXiv |eprint=2203.15556 |class=cs.CL |first1=Jordan |last1=Hoffmann |first2=Sebastian |last2=Borgeaud |title=Training Compute-Optimal Large Language Models |date=2022-03-29 |last3=Mensch |first3=Arthur |last4=Buchatskaya |first4=Elena |last5=Cai |first5=Trevor |last6=Rutherford |first6=Eliza |last7=Casas |first7=Diego de Las |last8=Hendricks |first8=Lisa Anne |last9=Welbl |first9=Johannes |last10=Clark |first10=Aidan |last11=Hennigan |first11=Tom |last12=Noland |first12=Eric |last13=Millican |first13=Katie |last14=Driessche |first14=George van den |last15=Damoc |first15=Bogdan}}</ref>
<small><math display="block">\begin{cases}
C = C_0 ND\\
L = \frac{A}{N^\alpha} + \frac{B}{D^{\beta}} + L_0
\end{cases}</math></small> where the variables are

* <small><math>C</math></small> is the cost of training the model, in [[FLOPS|FLOPs]].
* <small><math>N</math></small> is the number of parameters in the model.
* <small><math>D</math></small> is the number of tokens in the training set.
* <small><math>L</math></small> is the average negative log-likelihood loss per token ([[Nat (unit)|nats]]/token), achieved by the trained LLM on the test dataset.

and the statistical hyper-parameters are

* <small><math> C_0 = 6</math></small>, meaning that it costs 6 FLOPs per parameter to train on one token.<ref name="kaplan-scaling">{{Cite arXiv |eprint=2001.08361 |class=cs.LG |first1=Jared |last1=Kaplan |first2=Sam |last2=McCandlish |title=Scaling Laws for Neural Language Models |last3=Henighan |first3=Tom |last4=Brown |first4=Tom B. |last5=Chess |first5=Benjamin |last6=Child |first6=Rewon |last7=Gray |first7=Scott |last8=Radford |first8=Alec |last9=Wu |first9=Jeffrey |last10=Amodei |first10=Dario |year=2020}}</ref> Note that training cost is much higher than inference cost, where it costs 1 to 2 FLOPs per parameter to infer on one token.
* <small><math>\alpha = 0.34, \beta = 0.28, A = 406.4, B = 410.7, L_0 = 1.69</math></small>

{{anchor|Emergent abilities}}[[File:LLM emergent benchmarks.png|thumb|At point(s) referred to as [[Neural scaling law#Broken Neural Scaling Laws (BNSL)|breaks]],<ref name="IYm4Q" /> the lines change their slopes, appearing on a log-log plot as a series of linear segments connected by arcs.]]
When one subtracts out from the y-axis the best performance that can be achieved even with infinite scaling of the x-axis quantity, large models' performance, measured on various tasks, seems to be a linear extrapolation of other (smaller-sized and medium-sized) models' performance on a log-log plot. However, sometimes the line's slope transitions from one slope to another at point(s) referred to as [[Neural scaling law#Broken Neural Scaling Laws (BNSL)|break(s)]]<ref name="IYm4Q">{{cite arXiv |eprint=2210.14891 |class=cs.LG |first1=Ethan |last1=Caballero |first2=Kshitij |last2=Gupta |title=Broken Neural Scaling Laws |last3=Rish |first3=Irina |last4=Krueger |first4=David |year=2022}}</ref> in downstream scaling laws, appearing as a series of linear segments connected by arcs; it seems that larger models acquire "emergent abilities" at this point(s).<ref name="emergentpaper">{{cite journal |last1=Wei |first1=Jason |last2=Tay |first2=Yi |last3=Bommasani |first3=Rishi |last4=Raffel |first4=Colin |last5=Zoph |first5=Barret |last6=Borgeaud |first6=Sebastian |last7=Yogatama |first7=Dani |last8=Bosma |first8=Maarten |last9=Zhou |first9=Denny |last10=Metzler |first10=Donald |last11=Chi |first11=Ed H. |last12=Hashimoto |first12=Tatsunori |last13=Vinyals |first13=Oriol |last14=Liang |first14=Percy |last15=Dean |first15=Jeff |date=31 August 2022 |title=Emergent Abilities of Large Language Models |url=https://openreview.net/forum?id=yzkSU5zdwD |journal=Transactions on Machine Learning Research |language=en |issn=2835-8856 |last16=Fedus |first16=William}}</ref><ref name="JM6s1">{{Cite web |title=137 emergent abilities of large language models |url=https://www.jasonwei.net/blog/emergence |access-date=2023-06-24 |website=Jason Wei |language=en-US}}</ref> These abilities are discovered rather than programmed-in or designed, in some cases only after the LLM has been publicly deployed.<ref name="Bowman" />

The most intriguing among emergent abilities is [[in-context learning]] from example demonstrations.<ref name="Hahn_20230314">{{cite arXiv |eprint=2303.07971 |class=cs.LG |first1=Michael |last1=Hahn |first2=Navin |last2=Goyal |title=A Theory of Emergent In-Context Learning as Implicit Structure Induction |date=2023-03-14}}</ref> In-context learning is involved in tasks, such as:
* reported arithmetics, decoding the [[International Phonetic Alphabet]], unscrambling a word's letters, disambiguate word in context,<ref name="emergentpaper" /><ref name="57FEA">{{Cite journal |last1=Pilehvar |first1=Mohammad Taher |last2=Camacho-Collados |first2=Jose |title=Proceedings of the 2019 Conference of the North |date=June 2019 |url=https://aclanthology.org/N19-1128 |journal=Proceedings of the 2019 Conference of the North American Chapter of the Association for Computational Linguistics: Human Language Technologies, Volume 1 (Long and Short Papers) |location=Minneapolis, Minnesota |publisher=Association for Computational Linguistics |pages=1267–1273 |doi=10.18653/v1/N19-1128|s2cid=102353817 }}</ref><ref name="TEIkA">{{Cite web |title=WiC: The Word-in-Context Dataset |url=https://pilehvar.github.io/wic/ |access-date=2023-06-27 |website=pilehvar.github.io}}</ref> converting spatial words, [[cardinal direction]]s (for example, replying "northeast" upon [0, 0, 1; 0, 0, 0; 0, 0, 0]), color terms represented in text.<ref name="zgy1i">{{Cite journal |last1=Patel |first1=Roma |last2=Pavlick |first2=Ellie |date=2021-10-06 |title=Mapping Language Models to Grounded Conceptual Spaces |url=https://openreview.net/forum?id=gJcEM8sxHK |language=en}}</ref>
* [[chain-of-thought prompting]]: Model outputs are improved by chain-of-thought prompting only when model size exceeds 62B. Smaller models perform better when prompted to answer immediately, without chain of thought.<ref name="Imb98">''[https://www.notion.so/A-Closer-Look-at-Large-Language-Models-Emergent-Abilities-493876b55df5479d80686f68a1abd72f A Closer Look at Large Language Models Emergent Abilities]'' (Yao Fu, Nov 20, 2022)</ref>
* identifying offensive content in paragraphs of [[Hinglish]] (a combination of Hindi and English), and generating a similar English equivalent of [[Kiswahili]] proverbs.<ref name="CeQVF">{{Cite web |last=Ornes |first=Stephen |date=March 16, 2023 |title=The Unpredictable Abilities Emerging From Large AI Models |url=https://www.quantamagazine.org/the-unpredictable-abilities-emerging-from-large-ai-models-20230316/ |website=Quanta Magazine}}</ref>

Schaeffer ''et. al.'' argue that the emergent abilities are not unpredictably acquired, but predictably acquired according to a [[Neural scaling law|smooth scaling law]]. The authors considered a toy statistical model of an LLM solving multiple-choice questions, and showed that this statistical model, modified to account for other types of tasks, applies to these tasks as well.<ref name="C775b">{{cite arXiv |eprint=2304.15004 |class=cs.AI |first1=Rylan |last1=Schaeffer |first2=Brando |last2=Miranda |title=Are Emergent Abilities of Large Language Models a Mirage? |date=2023-04-01 |last3=Koyejo |first3=Sanmi}}</ref>

Let <math>x</math> be the number of parameter count, and <math>y</math> be the performance of the model.
{{smalldiv|1=
* When <math>y = \text{average } Pr(\text{correct token})</math>, then <math>(\log x, y)</math> is an exponential curve (before it hits the plateau at one), which looks like emergence.
* When <math>y = \text{average } \log(Pr(\text{correct token}))</math>, then the <math>(\log x, y)</math> plot is a straight line (before it hits the plateau at zero), which does not look like emergence.
* When <math>y = \text{average } Pr(\text{the most likely token is correct})</math>, then <math>(\log x, y)</math> is a step-function, which looks like emergence.
}}

== Interpretation ==
Large language models by themselves are "black boxes", and it is not clear how they can perform linguistic tasks. There are several methods for understanding how LLM work.

Mechanistic interpretability aims to [[Reverse engineering|reverse-engineer]] LLM by discovering symbolic algorithms that approximate the inference performed by LLM. One example is Othello-GPT, where a small Transformer is trained to predict legal [[reversi|Othello]] moves. It is found that there is a linear representation of Othello board, and modifying the representation changes the predicted legal Othello moves in the correct way.<ref name="IZSIr">{{Cite arXiv |eprint=2210.13382 |class=cs.LG |first1=Kenneth |last1=Li |first2=Aspen K. |last2=Hopkins |title=Emergent World Representations: Exploring a Sequence Model Trained on a Synthetic Task |date=2022-10-01 |last3=Bau |first3=David |last4=Viégas |first4=Fernanda |last5=Pfister |first5=Hanspeter |last6=Wattenberg |first6=Martin}}</ref><ref name="RLik9">{{Cite web |date=2023-01-21 |title=Large Language Model: world models or surface statistics? |url=https://thegradient.pub/othello/ |access-date=2023-06-12 |website=The Gradient |language=en}}</ref> In another example, a small Transformer is trained on [[Karel (programming language)|Karel programs]]. Similar to the Othello-GPT example, there is a linear representation of Karel program semantics, and modifying the representation changes output in the correct way. The model also generates correct programs that are on average shorter than those in the training set.<ref name="Hln1l">{{Cite arXiv |eprint=2305.11169 |class=cs.LG |first1=Charles |last1=Jin |first2=Martin |last2=Rinard |title=Evidence of Meaning in Language Models Trained on Programs |date=2023-05-01}}</ref>

In another example, the authors trained small transformers on [[Modular arithmetic|modular arithmetic addition]]. The resulting models were reverse-engineered, and it turned out they used [[discrete Fourier transform]].<ref name="oYGlo">{{Cite arXiv |eprint=2301.05217 |class=cs.LG |first1=Neel |last1=Nanda |first2=Lawrence |last2=Chan |title=Progress measures for grokking via mechanistic interpretability |date=2023-01-01 |last3=Lieberum |first3=Tom |last4=Smith |first4=Jess |last5=Steinhardt |first5=Jacob}}</ref>

=== Understanding and intelligence ===
NLP researchers were evenly split when asked, in a 2022 survey, whether (untuned) LLMs "could (ever) understand natural language in some nontrivial sense".<ref name="debate understanding">{{cite journal |last1=Mitchell |first1=Melanie |last2=Krakauer |first2=David C. |date=28 March 2023 |title=The debate over understanding in AI's large language models |journal=Proceedings of the National Academy of Sciences |volume=120 |issue=13 |pages=e2215907120 |arxiv=2210.13966 |bibcode=2023PNAS..12015907M |doi=10.1073/pnas.2215907120 |pmc=10068812 |pmid=36943882 |pmc-embargo-date=September 21, 2023}}</ref> Proponents of "LLM understanding" believe that some LLM abilities, such as mathematical reasoning, imply an ability to "understand" certain concepts. A Microsoft team argued in 2023 that GPT-4 "can solve novel and difficult tasks that span mathematics, coding, vision, medicine, law, psychology and more" and that GPT-4 "could reasonably be viewed as an early (yet still incomplete) version of an artificial general intelligence system": "Can one reasonably say that a system that passes exams for software engineering candidates is not ''really'' intelligent?"<ref name="O8Upd">{{cite news |last1=Metz |first1=Cade |date=16 May 2023 |title=Microsoft Says New A.I. Shows Signs of Human Reasoning |work=The New York Times |url=https://www.nytimes.com/2023/05/16/technology/microsoft-ai-human-reasoning.html}}</ref><ref name="microsoft sparks">{{cite arXiv |eprint=2303.12712 |class=cs.CL |first1=Sébastien |last1=Bubeck |first2=Varun |last2=Chandrasekaran |title=Sparks of Artificial General Intelligence: Early experiments with GPT-4 |date=2023 |last3=Eldan |first3=Ronen |last4=Gehrke |first4=Johannes |last5=Horvitz |first5=Eric |last6=Kamar |first6=Ece |last7=Lee |first7=Peter |last8=Lee |first8=Yin Tat |last9=Li |first9=Yuanzhi |last10=Lundberg |first10=Scott |last11=Nori |first11=Harsha |last12=Palangi |first12=Hamid |last13=Ribeiro |first13=Marco Tulio |last14=Zhang |first14=Yi}}</ref> Some researchers characterize LLMs as "alien intelligence".<ref name="rEEmH">{{cite news |date=2023 |title=ChatGPT is more like an 'alien intelligence' than a human brain, says futurist |language=en |work=ZDNET |url=https://www.zdnet.com/article/chatgpt-is-more-like-an-alien-intelligence-than-a-human-brain-says-futurist/ |access-date=12 June 2023}}</ref><ref name="new yorker kind of mind">{{cite magazine |last1=Newport |first1=Cal |date=13 April 2023 |title=What Kind of Mind Does ChatGPT Have? |url=https://www.newyorker.com/science/annals-of-artificial-intelligence/what-kind-of-mind-does-chatgpt-have |magazine=The New Yorker |access-date=12 June 2023}}</ref> For example, Conjecture CEO Connor Leahy considers untuned LLMs to be like inscrutable alien "[[Shoggoth]]s", and believes that RLHF tuning creates a "smiling facade" obscuring the inner workings of the LLM: "If you don't push it too far, the smiley face stays on. But then you give it [an unexpected] prompt, and suddenly you see this massive underbelly of insanity, of weird thought processes and clearly non-human understanding."<ref name="rAFIZ">{{cite news |last1=Roose |first1=Kevin |date=30 May 2023 |title=Why an Octopus-like Creature Has Come to Symbolize the State of A.I. |work=The New York Times |url=https://www.nytimes.com/2023/05/30/technology/shoggoth-meme-ai.html |access-date=12 June 2023}}</ref><ref name="4luKE">{{cite news |date=13 April 2023 |title=The A to Z of Artificial Intelligence |language=en |work=Time Magazine |url=https://time.com/6271657/a-to-z-of-artificial-intelligence/ |access-date=12 June 2023}}</ref>

In contrast, some proponents of the "LLMs lack understanding" school believe that existing LLMs are "simply remixing and recombining existing writing",<ref name="new yorker kind of mind" /> or point to the deficits existing LLMs continue to have in prediction skills, reasoning skills, agency, and explainability.<ref name="debate understanding" /> For example, GPT-4 has natural deficits in planning and in real-time learning.<ref name="microsoft sparks" /> Generative LLMs have been observed to confidently assert claims of fact which do not seem to be [[Justification (epistemology)|justified]] by their [[training data]], a phenomenon which has been termed "[[Hallucination (artificial intelligence)|hallucination]]".<ref name="hallucination-survey">{{cite journal |last1=Ji |first1=Ziwei |last2=Lee |first2=Nayeon |last3=Frieske |first3=Rita |last4=Yu |first4=Tiezheng |last5=Su |first5=Dan |last6=Xu |first6=Yan |last7=Ishii |first7=Etsuko |last8=Bang |first8=Yejin |last9=Dai |first9=Wenliang |last10=Madotto |first10=Andrea |last11=Fung |first11=Pascale |date=November 2022 |title=Survey of Hallucination in Natural Language Generation |url=https://dl.acm.org/doi/pdf/10.1145/3571730 |format=pdf |journal=ACM Computing Surveys |publisher=[[Association for Computing Machinery]] |volume=55 |issue=12 |pages=1–38 |arxiv=2202.03629 |doi=10.1145/3571730 |s2cid=246652372 |access-date=15 January 2023}}</ref> <ref>{{cite journal |last1=Varshney |first1=Neeraj |title=A Stitch in Time Saves Nine: Detecting and Mitigating Hallucinations of LLMs by Validating Low-Confidence Generation |date=2023 |arxiv=2307.03987 }}</ref> Neuroscientist [[Terrence Sejnowski]] has argued that "The diverging opinions of experts on the intelligence of LLMs suggests that our old ideas based on natural intelligence are inadequate".<ref name="debate understanding" />

The matter of LLM's exhibiting intelligence or understanding <ref name="debate understanding">{{cite journal |last1=Mitchell |first1=Melanie |last2=Krakauer |first2=David C. |date=28 March 2023 |title=The debate over understanding in AI's large language models |journal=Proceedings of the National Academy of Sciences |volume=120 |issue=13 |pages=e2215907120 |arxiv=2210.13966 |bibcode=2023PNAS..12015907M |doi=10.1073/pnas.2215907120 |pmc=10068812 |pmid=36943882 |pmc-embargo-date=September 21, 2023}}</ref> has foundations in the study of language as a model of [[Cognition]] in the field of [[Cognitive linguistics]]. The American Linguist [[George Lakoff]] presented Neural Theory of Language (NTL) as a  [[Cognitive linguistics#Computational approaches|computational basis]] for using language as a model of learning tasks and understanding.<ref>Lakoff, G., and M. Johnson, 1999, ''Philosophy in the Flesh: The Embodied Mind and its Challenge to Western Thought'', New York: Basic Books</ref> In his 2014 book titled [[The Language Myth|The Language Myth: Why Language Is Not An Instinct]], British cognitive linguist and digital communication technologist [[Vyvyan Evans]] maps out the role of [[probabilistic context-free grammar]] (PCFG) in enabling [[Natural language processing#Cognition and NLP|NLP to model cognitive patterns]].

== Evaluation ==

=== Perplexity ===
The most commonly used measure of a language model's performance is its [[perplexity]] on a given text corpus. Perplexity is a measure of how well a model is able to predict the contents of a dataset; the higher the likelihood the model assigns to the dataset, the lower the perplexity. Mathematically, perplexity is defined as the exponential of the average negative log likelihood per token:<math display="block">\log(\text{Perplexity}) = -\frac{1}{N} \sum_{i=1}^N \log(Pr(\text{token}_i | \text{context for token}_i))</math>here <math>N</math> is the number of tokens in the text corpus, and "context for token <math>i</math>" depends on the specific type of LLM used. If the LLM is autoregressive, then "context for token <math>i</math>" is the segment of text appearing before token <math>i</math>. If the LLM is masked, then "context for token <math>i</math>" is the segment of text surrounding token <math>i</math>.

Because language models may [[overfit]] to their training data, models are usually evaluated by their perplexity on a [[test set]] of unseen data.<ref name="jm" /> This presents particular challenges for the evaluation of large language models. As they are trained on increasingly large corpora of text largely scraped from the web, it becomes increasingly likely that models' training data inadvertently includes portions of any given test set.<ref name="few-shot-learners" />

=== Task-specific datasets and benchmarks ===
A large number of testing datasets and benchmarks have also been developed to evaluate the capabilities of language models on more specific downstream tasks. Tests may be designed to evaluate a variety of capabilities, including general knowledge, commonsense reasoning, and mathematical problem-solving.

One broad category of evaluation dataset is question answering datasets, consisting of pairs of questions and correct answers, for example, ("Have the San Jose Sharks won the Stanley Cup?", "No").<ref name="boolq">{{cite arXiv |eprint=1905.10044 |class=cs.CL |first1=Christopher |last1=Clark |first2=Kenton |last2=Lee |title=BoolQ: Exploring the Surprising Difficulty of Natural Yes/No Questions |last3=Chang |first3=Ming-Wei |last4=Kwiatkowski |first4=Tom |last5=Collins |first5=Michael |last6=Toutanova |first6=Kristina |year=2019}}</ref> A question answering task is considered "open book" if the model's prompt includes text from which the expected answer can be derived (for example, the previous question could be adjoined with some text which includes the sentence "The Sharks have advanced to the Stanley Cup finals once, losing to the Pittsburgh Penguins in 2016."<ref name="boolq" />). Otherwise, the task is considered "closed book", and the model must draw on knowledge retained during training.<ref name="survey">{{cite arXiv |eprint=2303.18223 |class=cs.CL |author1=Wayne Xin Zhao |first2=Kun |last2=Zhou |title=A Survey of Large Language Models |last3=Li |first3=Junyi |last4=Tang |first4=Tianyi |last5=Wang |first5=Xiaolei |last6=Hou |first6=Yupeng |last7=Min |first7=Yingqian |last8=Zhang |first8=Beichen |last9=Zhang |first9=Junjie |last10=Dong |first10=Zican |last11=Du |first11=Yifan |last12=Yang |first12=Chen |last13=Chen |first13=Yushuo |last14=Chen |first14=Zhipeng |last15=Jiang |first15=Jinhao |last16=Ren |first16=Ruiyang |last17=Li |first17=Yifan |last18=Tang |first18=Xinyu |last19=Liu |first19=Zikang |last20=Liu |first20=Peiyu |last21=Nie |first21=Jian-Yun |last22=Wen |first22=Ji-Rong |year=2023}}</ref> Some examples of commonly used question answering datasets include TruthfulQA, Web Questions, TriviaQA, and SQuAD.<ref name="survey" />

Evaluation datasets may also take the form of text completion, having the model select the most likely word or sentence to complete a prompt, for example: "Alice was friends with Bob. Alice went to visit her friend, ____".<ref name="few-shot-learners" />

Some composite benchmarks have also been developed which combine a diversity of different evaluation datasets and tasks. Examples include GLUE, SuperGLUE, MMLU, BIG-bench, and HELM.<ref name="Huyen">{{cite web |last=Huyen |first=Chip |date=18 October 2019 |title=Evaluation Metrics for Language Modeling |url=https://thegradient.pub/understanding-evaluation-metrics-for-language-models/ |work=The Gradient}}</ref><ref name="survey" />

It was previously standard to report results on a heldout portion of an evaluation dataset after doing supervised fine-tuning on the remainder. It is now more common to evaluate a pre-trained model directly through prompting techniques, though researchers vary in the details of how they formulate prompts for particular tasks, particularly with respect to how many examples of solved tasks are adjoined to the prompt (i.e. the value of ''n'' in ''n''-shot prompting).

==== Adversarially constructed evaluations ====
Because of the rapid pace of improvement of large language models, evaluation benchmarks have suffered from short lifespans, with state of the art models quickly "saturating" existing benchmarks, exceeding the performance of human annotators, leading to efforts to replace or augment the benchmark with more challenging tasks.<ref name="bigbench">{{cite arXiv |eprint=2206.04615 |class=cs.CL |first1=Aarohi |last1=Srivastava |first2=Abhinav |last2=Rastogi |title=Beyond the Imitation Game: Quantifying and extrapolating the capabilities of language models |last3=Rao |first3=Abhishek |author4=Abu Awal Md Shoeb |last5=Abid |first5=Abubakar |last6=Fisch |first6=Adam |last7=Brown |first7=Adam R. |last8=Santoro |first8=Adam |last9=Gupta |first9=Aditya |last10=Garriga-Alonso |first10=Adrià |last11=Kluska |first11=Agnieszka |last12=Lewkowycz |first12=Aitor |last13=Agarwal |first13=Akshat |last14=Power |first14=Alethea |last15=Ray |first15=Alex |last16=Warstadt |first16=Alex |last17=Kocurek |first17=Alexander W. |last18=Safaya |first18=Ali |last19=Tazarv |first19=Ali |last20=Xiang |first20=Alice |last21=Parrish |first21=Alicia |last22=Nie |first22=Allen |last23=Hussain |first23=Aman |last24=Askell |first24=Amanda |last25=Dsouza |first25=Amanda |last26=Slone |first26=Ambrose |last27=Rahane |first27=Ameet |last28=Iyer |first28=Anantharaman S. |last29=Andreassen |first29=Anders |last30=Madotto |first30=Andrea |year=2022 |display-authors=1}}</ref> In addition, there are cases of "shortcut learning" wherein AIs sometimes "cheat" on multiple-choice tests by using statistical correlations in superficial test question wording in order to guess the correct responses, without necessarily understanding the actual question being asked.<ref name="debate understanding" />

Some datasets have been constructed adversarially, focusing on particular problems on which extant language models seem to have unusually poor performance compared to humans. One example is the TruthfulQA dataset, a question answering dataset consisting of 817 questions which language models are susceptible to answering incorrectly by mimicking falsehoods to which they were repeatedly exposed during training. For example, an LLM may answer "No" to the question "Can you teach an old dog new tricks?" because of its exposure to the English idiom ''[[wikt:you can't teach an old dog new tricks|you can't teach an old dog new tricks]]'', even though this is not literally true.<ref name="truthfulqa">{{cite arXiv |eprint=2109.07958 |class=cs.CL |first1=Stephanie |last1=Lin |first2=Jacob |last2=Hilton |title=TruthfulQA: Measuring How Models Mimic Human Falsehoods |last3=Evans |first3=Owain |year=2021}}</ref>

Another example of an adversarial evaluation dataset is Swag and its successor, HellaSwag, collections of problems in which one of multiple options must be selected to complete a text passage. The incorrect completions were generated by sampling from a language model and filtering with a set of classifiers. The resulting problems are trivial for humans but at the time the datasets were created state of the art language models had poor accuracy on them. For example:
<blockquote>
We see a fitness center sign. We then see a man talking to the camera and sitting and laying on a exercise ball. The man...
{{br}}a) demonstrates how to increase efficient exercise work by running up and down balls.
{{br}}b) moves all his arms and legs and builds up a lot of muscle.
{{br}}c) then plays the ball and we see a graphics and hedge trimming demonstration.
{{br}}d) performs sits ups while on the ball and talking.<ref name="hellaswag">{{cite arXiv |eprint=1905.07830 |class=cs.CL |first1=Rowan |last1=Zellers |first2=Ari |last2=Holtzman |title=HellaSwag: Can a Machine Really Finish Your Sentence? |last3=Bisk |first3=Yonatan |last4=Farhadi |first4=Ali |last5=Choi |first5=Yejin |year=2019}}</ref>
</blockquote>
[[BERT (language model)|BERT]] selects b) as the most likely completion, though the correct answer is d).<ref name="hellaswag" />

== Wider impact ==
In 2023, ''[[Nature Biomedical Engineering]]'' wrote that "it is no longer possible to accurately distinguish" human-written text from text created by large language models, and that "It is all but certain that general-purpose large language models will rapidly proliferate... It is a rather safe bet that they will change many industries over time."<ref name="ZDTUM">{{cite journal |date=7 March 2023 |title=Prepare for truly useful large language models |journal=Nature Biomedical Engineering |language=en |volume=7 |issue=2 |pages=85–86 |doi=10.1038/s41551-023-01012-6 |pmid=36882584 |s2cid=257403466}}</ref> [[Goldman Sachs]] suggested in 2023 that generative language AI could increase global GDP by 7% in the next ten years, and could expose to automation 300 million jobs globally.<ref name="81w7x">{{cite news |date=7 May 2023 |title=Your job is (probably) safe from artificial intelligence |newspaper=The Economist |url=https://www.economist.com/finance-and-economics/2023/05/07/your-job-is-probably-safe-from-artificial-intelligence |access-date=18 June 2023}}</ref><ref name="zIM6Y">{{cite web |title=Generative AI Could Raise Global GDP by 7% |url=https://www.goldmansachs.com/intelligence/pages/generative-ai-could-raise-global-gdp-by-7-percent.html |access-date=18 June 2023 |website=Goldman Sachs}}</ref> Some commenters expressed concern over accidental or deliberate creation of misinformation, or other forms of misuse.<ref name="nD6kH">{{cite news |last1=Alba |first1=Davey |date=1 May 2023 |title=AI chatbots have been used to create dozens of news content farms |work=The Japan Times |url=https://www.japantimes.co.jp/news/2023/05/01/business/tech/ai-fake-news-content-farms/ |access-date=18 June 2023}}</ref> For example, the availability of large language models could reduce the skill-level required to commit bioterrorism; biosecurity researcher Kevin Esvelt has suggested that LLM creators should exclude from their training data papers on creating or enhancing pathogens.<ref name="PKiPY">{{cite journal |date=14 June 2023 |title=Could chatbots help devise the next pandemic virus? |url=https://www.science.org/content/article/could-chatbots-help-devise-next-pandemic-virus |journal=Science |language=en |doi=10.1126/science.adj2463}}</ref>

==List==
{| class="wikitable sortable"
|-
! Name !! Release date{{efn|This is the date that documentation describing the model's architecture was first released.}} !! Developer !! Number of parameters{{efn|In many cases, researchers release or report on multiple versions of a model having different sizes. In these cases, the size of the largest model is listed here.}} !! Corpus size 
!Training cost (petaFLOP-day)!! License{{efn|This is the license of the pre-trained model weights. In almost all cases the training code itself is open-source or can be easily replicated.}} !! Notes
|-
| [[BERT (language model)|BERT]] || {{dts|2018}} || [[Google]] || {{sort|340000000|340 million}}<ref name=bert-paper/> || {{sort|3300000000|3.3 billion}} words<ref name=bert-paper/> 
|{{sort|9|9}}<ref name="bHZJ2">{{Cite web |last=Prickett |first=Nicole Hemsoth |date=2021-08-24 |title=Cerebras Shifts Architecture To Meet Massive AI/ML Models |url=https://www.nextplatform.com/2021/08/24/cerebras-shifts-architecture-to-meet-massive-ai-ml-models/ |access-date=2023-06-20 |website=The Next Platform |language=en-US}}</ref>|| {{yes|Apache 2.0}}<ref name="bert-web">{{Cite web|url=https://github.com/google-research/bert|title=BERT|date=March 13, 2023|via=GitHub}}</ref>
| An early and influential language model,<ref name="Manning-2022" /> but encoder-only and thus not built to be prompted or generative<ref name="Ir545">{{cite arXiv |last1=Patel |first1=Ajay |last2=Li |first2=Bryan |last3=Rasooli |first3=Mohammad Sadegh |last4=Constant |first4=Noah |last5=Raffel |first5=Colin |last6=Callison-Burch |first6=Chris |title=Bidirectional Language Models Are Also Few-shot Learners |date=2022 |class=cs.LG |eprint=2209.14500}}</ref>
|-
| XLNet || {{dts|2019}} || [[Google]] || {{sort|340000000|~340 million}}<ref name="45rAm">{{Cite web|url=https://www.kdnuggets.com/bert-roberta-distilbert-xlnet-which-one-to-use.html|title=BERT, RoBERTa, DistilBERT, XLNet: Which one to use?}}</ref> || {{sort|3300000000|33 billion}} words 
| ||
| An alternative to BERT; designed as encoder-only<ref name="gAbNO">{{Cite web|url=https://analyticsindiamag.com/google-introduces-new-architecture-to-reduce-cost-of-transformers/|title=Google Introduces New Architecture To Reduce Cost Of Transformers|first=Amit Raja|last=Naik|date=September 23, 2021|website=Analytics India Magazine}}</ref><ref name="LX3rI">{{cite arXiv |last1=Yang |first1=Zhilin |last2=Dai |first2=Zihang |last3=Yang |first3=Yiming |last4=Carbonell |first4=Jaime |last5=Salakhutdinov |first5=Ruslan |last6=Le |first6=Quoc V. |title=XLNet: Generalized Autoregressive Pretraining for Language Understanding |date=2 January 2020 |class=cs.CL |eprint=1906.08237}}</ref>
|-
| [[GPT-2]] || {{dts|2019}} || [[OpenAI]] || {{sort|1500000000|1.5 billion}}<ref name="15Brelease"/> || 40GB<ref name="5T8u5">{{cite web |title=Better language models and their implications |url=https://openai.com/research/better-language-models |website=openai.com}}</ref> (~{{sort|10000000000|10 billion}} tokens)<ref name="LambdaLabs">{{cite web |title=OpenAI's GPT-3 Language Model: A Technical Overview |url=https://lambdalabs.com/blog/demystifying-gpt-3 |website=lambdalabs.com |date=3 June 2020 |language=en}}</ref> 
||| {{yes|MIT}}<ref name="Sudbe">{{cite web|work=GitHub|title=gpt-2|url=https://github.com/openai/gpt-2|access-date=13 March 2023}}</ref>
| general-purpose model based on transformer architecture
|-
| [[GPT-3]] || {{dts|2020}} || OpenAI || {{sort|175000000000|175 billion}}<ref name="Wiggers" /> || {{sort|300000000000|300 billion}} tokens<ref name="LambdaLabs" /> 
|3640<ref name=":2">Table D.1 in {{Cite arXiv |last1=Brown |first1=Tom B. |last2=Mann |first2=Benjamin |last3=Ryder |first3=Nick |last4=Subbiah |first4=Melanie |last5=Kaplan |first5=Jared |last6=Dhariwal |first6=Prafulla |last7=Neelakantan |first7=Arvind |last8=Shyam |first8=Pranav |last9=Sastry |first9=Girish |last10=Askell |first10=Amanda |last11=Agarwal |first11=Sandhini |last12=Herbert-Voss |first12=Ariel |last13=Krueger |first13=Gretchen |last14=Henighan |first14=Tom |last15=Child |first15=Rewon |date=May 28, 2020 |title=Language Models are Few-Shot Learners |eprint=2005.14165v4 |first16=Aditya |last16=Ramesh |first17=Daniel M. |last17=Ziegler |first18=Jeffrey |last18=Wu |first19=Clemens |last19=Winter |first20=Christopher |last20=Hesse |first21=Mark |last21=Chen |first22=Eric |last22=Sigler |first23=Mateusz |last23=Litwin |first24=Scott |last24=Gray |first25=Benjamin |last25=Chess |first26=Jack |last26=Clark |first27=Christopher |last27=Berner |first28=Sam |last28=McCandlish |first29=Alec |last29=Radford |first30=Ilya |last30=Sutskever |first31=Dario |last31=Amodei|class=cs.CL}}</ref>|| {{no|proprietary}}
| A fine-tuned variant of GPT-3, termed GPT-3.5, was made available to the public through a web interface called [[ChatGPT]] in 2022.<ref name=chatgpt-blog/>
|-
| GPT-Neo || {{dts|March 2021}} || [[EleutherAI]] || {{sort|2700000000|2.7 billion}}<ref name="gpt-neo">{{Cite web|url=https://github.com/EleutherAI/gpt-neo|title=GPT Neo|date=March 15, 2023|via=GitHub}}</ref> || 825 GiB<ref name="Pile">{{cite arXiv |last1=Gao |first1=Leo |last2=Biderman |first2=Stella |last3=Black |first3=Sid |last4=Golding |first4=Laurence |last5=Hoppe |first5=Travis |last6=Foster |first6=Charles |last7=Phang |first7=Jason |last8=He |first8=Horace |last9=Thite |first9=Anish |last10=Nabeshima |first10=Noa |last11=Presser |first11=Shawn |last12=Leahy |first12=Connor |title=The Pile: An 800GB Dataset of Diverse Text for Language Modeling |eprint=2101.00027|date=31 December 2020 |class=cs.CL}}</ref> 
| || {{yes|MIT}}<ref name=vb-gpt-neo/>
| The first of [[EleutherAI#GPT models|a series of free GPT-3 alternatives]] released by EleutherAI. GPT-Neo outperformed an equivalent-size GPT-3 model on some benchmarks, but was significantly worse than the largest GPT-3.<ref name=vb-gpt-neo/>
|-
| [[GPT-J]] || {{dts|June 2021}} || [[EleutherAI]] || {{sort|6000000000|6 billion}}<ref name="JxohJ">{{Cite web |title=GPT-J-6B: An Introduction to the Largest Open Source GPT Model {{!}} Forefront |url=https://www.forefront.ai/blog-posts/gpt-j-6b-an-introduction-to-the-largest-open-sourced-gpt-model |access-date=2023-02-28 |website=www.forefront.ai |language=en}}</ref> || 825 GiB<ref name="Pile" /> 
|200<ref name=":3">{{Cite arXiv |last1=Dey |first1=Nolan |last2=Gosal |first2=Gurpreet |last3=Zhiming |last4=Chen |last5=Khachane |first5=Hemant |last6=Marshall |first6=William |last7=Pathria |first7=Ribhu |last8=Tom |first8=Marvin |last9=Hestness |first9=Joel |date=2023-04-01 |title=Cerebras-GPT: Open Compute-Optimal Language Models Trained on the Cerebras Wafer-Scale Cluster |class=cs.LG |eprint=2304.03208}}</ref>|| {{yes|Apache 2.0}}
| GPT-3-style language model
|-
| Megatron-Turing NLG || {{dts|October 2021}}<ref name="BwnW5">{{cite web |last1=Alvi |first1=Ali |last2=Kharya |first2=Paresh |title=Using DeepSpeed and Megatron to Train Megatron-Turing NLG 530B, the World's Largest and Most Powerful Generative Language Model |url=https://www.microsoft.com/en-us/research/blog/using-deepspeed-and-megatron-to-train-megatron-turing-nlg-530b-the-worlds-largest-and-most-powerful-generative-language-model/ |website=Microsoft Research |date=11 October 2021}}</ref> || [[Microsoft]] and [[Nvidia]] || {{sort|530000000000|530 billion}}<ref name=mtnlg-preprint/> || {{sort|338600000000|338.6 billion}} tokens<ref name=mtnlg-preprint/> 
| || {{no|Restricted web access}}
| Standard architecture but trained on a supercomputing cluster.
|-
| Ernie 3.0 Titan || {{dts|December 2021}} || [[Baidu]] || {{sort|260000000000|260 billion}}<ref name="qeOB8">{{Cite arXiv|title=ERNIE 3.0 Titan: Exploring Larger-scale Knowledge Enhanced Pre-training for Language Understanding and Generation|first1=Shuohuan|last1=Wang|first2=Yu|last2=Sun|first3=Yang|last3=Xiang|first4=Zhihua|last4=Wu|first5=Siyu|last5=Ding|first6=Weibao|last6=Gong|first7=Shikun|last7=Feng|first8=Junyuan|last8=Shang|first9=Yanbin|last9=Zhao|first10=Chao|last10=Pang|first11=Jiaxiang|last11=Liu|first12=Xuyi|last12=Chen|first13=Yuxiang|last13=Lu|first14=Weixin|last14=Liu|first15=Xi|last15=Wang|first16=Yangfan|last16=Bai|first17=Qiuliang|last17=Chen|first18=Li|last18=Zhao|first19=Shiyong|last19=Li|first20=Peng|last20=Sun|first21=Dianhai|last21=Yu|first22=Yanjun|last22=Ma|first23=Hao|last23=Tian|first24=Hua|last24=Wu|first25=Tian|last25=Wu|first26=Wei|last26=Zeng|first27=Ge|last27=Li|first28=Wen|last28=Gao|first29=Haifeng|last29=Wang|date=December 23, 2021|class=cs.CL |eprint=2112.12731}}</ref> || 4 Tb 
| || {{no|Proprietary}}
| Chinese-language LLM. [[Ernie Bot]] is based on this model.
|-
| Claude<ref name="i8jc4">{{cite web |title=Product |url=https://www.anthropic.com/product |website=Anthropic |access-date=14 March 2023 |language=en}}</ref> || {{dts|December 2021}} || [[Anthropic]] || {{sort|52000000000|52 billion}}<ref name="AnthroArch">{{cite arXiv |last1=Askell |first1=Amanda |last2=Bai |first2=Yuntao |last3=Chen |first3=Anna |last4=Drain |first4=Dawn |last5=Ganguli |first5=Deep |last6=Henighan |first6=Tom |last7=Jones |first7=Andy |last8=Joseph |first8=Nicholas |last9=Mann |first9=Ben |last10=DasSarma |first10=Nova |last11=Elhage |first11=Nelson |last12=Hatfield-Dodds |first12=Zac |last13=Hernandez |first13=Danny |last14=Kernion |first14=Jackson |last15=Ndousse |first15=Kamal |last16=Olsson |first16=Catherine |last17=Amodei |first17=Dario |last18=Brown |first18=Tom |last19=Clark |first19=Jack |last20=McCandlish |first20=Sam |last21=Olah |first21=Chris |last22=Kaplan |first22=Jared |display-authors=3 |title=A General Language Assistant as a Laboratory for Alignment |eprint=2112.00861 |date=9 December 2021 |class=cs.CL}}</ref> || {{sort|400000000000|400 billion}} tokens<ref name="AnthroArch" /> 
| || {{partial success|beta}}
| Fine-tuned for desirable behavior in conversations.<ref name="RZqhw">{{cite arXiv |last1=Bai |first1=Yuntao |last2=Kadavath |first2=Saurav |last3=Kundu |first3=Sandipan |last4=Askell |first4=Amanda |last5=Kernion |first5=Jackson |last6=Jones |first6=Andy |last7=Chen |first7=Anna |last8=Goldie |first8=Anna |last9=Mirhoseini |first9=Azalia |last10=McKinnon |first10=Cameron |last11=Chen |first11=Carol |last12=Olsson |first12=Catherine |last13=Olah |first13=Christopher |last14=Hernandez |first14=Danny |last15=Drain |first15=Dawn |last16=Ganguli |first16=Deep |last17=Li |first17=Dustin |last18=Tran-Johnson |first18=Eli |last19=Perez |first19=Ethan |last20=Kerr |first20=Jamie |last21=Mueller |first21=Jared |last22=Ladish |first22=Jeffrey |last23=Landau |first23=Joshua |last24=Ndousse |first24=Kamal |last25=Lukosuite |first25=Kamile |last26=Lovitt |first26=Liane |last27=Sellitto |first27=Michael |last28=Elhage |first28=Nelson |last29=Schiefer |first29=Nicholas |last30=Mercado |first30=Noemi |last31=DasSarma |first31=Nova |last32=Lasenby |first32=Robert |last33=Larson |first33=Robin |last34=Ringer |first34=Sam |last35=Johnston |first35=Scott |last36=Kravec |first36=Shauna |last37=Showk |first37=Sheer El |last38=Fort |first38=Stanislav |last39=Lanham |first39=Tamera |last40=Telleen-Lawton |first40=Timothy |last41=Conerly |first41=Tom |last42=Henighan |first42=Tom |last43=Hume |first43=Tristan |last44=Bowman |first44=Samuel R. |last45=Hatfield-Dodds |first45=Zac |last46=Mann |first46=Ben |last47=Amodei |first47=Dario |last48=Joseph |first48=Nicholas |last49=McCandlish |first49=Sam |last50=Brown |first50=Tom |last51=Kaplan |first51=Jared |display-authors=3 |title=Constitutional AI: Harmlessness from AI Feedback |eprint=2212.08073 |date=15 December 2022 |class=cs.CL}}</ref>
|-
| GLaM (Generalist Language Model) || {{dts|December 2021}} || Google || {{sort|1200000000000|1.2 trillion}}<ref name=glam-blog/> || {{sort|1600000000000|1.6 trillion}} tokens<ref name=glam-blog/> 
| 5600<ref name="glam-blog" />|| {{no|Proprietary}}
| Sparse mixture-of-experts model, making it more expensive to train but cheaper to run inference compared to GPT-3.
|-
| Gopher || {{dts|December 2021}} || [[DeepMind]] || {{sort|280000000000|280 billion}}<ref name="mD5eE">{{cite web |title=Language modelling at scale: Gopher, ethical considerations, and retrieval |url=https://www.deepmind.com/blog/language-modelling-at-scale-gopher-ethical-considerations-and-retrieval |website=www.deepmind.com |access-date=20 March 2023 |language=en}}</ref> || {{sort|300000000000|300 billion}} tokens<ref name="hoffman" /> 
|5833<ref name=":4">Table 20 of ''[https://storage.googleapis.com/pathways-language-model/PaLM-paper.pdf PaLM: Scaling Language Modeling with Pathways]''</ref>|| {{no|Proprietary}}
| 
|-
| [[LaMDA]] (Language Models for Dialog Applications) || {{dts|January 2022}} || Google || {{sort|137000000000|137 billion}}<ref name=lamda-blog/> ||  1.56T words,<ref name=lamda-blog/> {{sort|168000000000|168 billion}} tokens<ref name="hoffman" /> 
|4110<ref name="DMs9Z">{{Cite arXiv |last1=Thoppilan |first1=Romal |last2=De Freitas |first2=Daniel |last3=Hall |first3=Jamie |last4=Shazeer |first4=Noam |last5=Kulshreshtha |first5=Apoorv |last6=Cheng |first6=Heng-Tze |last7=Jin |first7=Alicia |last8=Bos |first8=Taylor |last9=Baker |first9=Leslie |last10=Du |first10=Yu |last11=Li |first11=YaGuang |last12=Lee |first12=Hongrae |last13=Zheng |first13=Huaixiu Steven |last14=Ghafouri |first14=Amin |last15=Menegali |first15=Marcelo |date=2022-01-01 |title=LaMDA: Language Models for Dialog Applications |class=cs.CL |eprint=2201.08239}}</ref>|| {{no|Proprietary}}
| Specialized for response generation in conversations.
|-
| GPT-NeoX || {{dts|February 2022}} || [[EleutherAI]] || {{sort|20000000000|20 billion}}<ref name="gpt-neox-20b">{{cite conference |title=GPT-NeoX-20B: An Open-Source Autoregressive Language Model |conference=Proceedings of BigScience Episode #5 -- Workshop on Challenges & Perspectives in Creating Large Language Models |date=2022-05-01 |last1=Black |first1=Sidney |last2=Biderman |first2=Stella |last3=Hallahan |first3=Eric |display-authors=etal |volume=Proceedings of BigScience Episode #5 -- Workshop on Challenges & Perspectives in Creating Large Language Models |pages=95–136 |url=https://aclanthology.org/2022.bigscience-1.9/ |access-date=2022-12-19}}</ref> || 825 GiB<ref name="Pile" /> 
|740<ref name=":3" />|| {{yes|Apache 2.0}}
| based on the Megatron architecture
|-
| [[Chinchilla AI|Chinchilla]] || {{dts|March 2022}} || [[DeepMind]] || {{sort|70000000000|70 billion}}<ref name=chinchilla-blog/> || {{sort|1400000000000|1.4 trillion}} tokens<ref name=chinchilla-blog/><ref name="hoffman">{{cite arXiv |last1=Hoffmann |first1=Jordan |last2=Borgeaud |first2=Sebastian |last3=Mensch |first3=Arthur |last4=Buchatskaya |first4=Elena |last5=Cai |first5=Trevor |last6=Rutherford |first6=Eliza |last7=Casas |first7=Diego de Las |last8=Hendricks |first8=Lisa Anne |last9=Welbl |first9=Johannes |last10=Clark |first10=Aidan |last11=Hennigan |first11=Tom |last12=Noland |first12=Eric |last13=Millican |first13=Katie |last14=Driessche |first14=George van den |last15=Damoc |first15=Bogdan |last16=Guy |first16=Aurelia |last17=Osindero |first17=Simon |last18=Simonyan |first18=Karen |last19=Elsen |first19=Erich |last20=Rae |first20=Jack W. |last21=Vinyals |first21=Oriol |last22=Sifre |first22=Laurent |title=Training Compute-Optimal Large Language Models |eprint=2203.15556 |date=29 March 2022 |class=cs.CL |display-authors=3}}</ref> 
|6805<ref name=":4" />|| {{no|Proprietary}}
| Reduced-parameter model trained on more data. Used in the [[Sparrow (bot)|Sparrow]] bot.
|-
| [[PaLM]] (Pathways Language Model) || {{dts|April 2022}} || Google || {{sort|540000000000|540 billion}}<ref name=palm-blog/> || {{sort|768000000000|768 billion}} tokens<ref name=chinchilla-blog/> 
|29250<ref name=":4" />|| {{no|Proprietary}}
| aimed to reach the practical limits of model scale
|-
| OPT (Open Pretrained Transformer) || {{dts|May 2022}} || [[Meta Platforms|Meta]] || {{sort|175000000000|175 billion}}<ref name="jlof8">{{cite web |title=Democratizing access to large-scale language models with OPT-175B |url=https://ai.facebook.com/blog/democratizing-access-to-large-scale-language-models-with-opt-175b/ |website=ai.facebook.com |language=en}}</ref> || {{sort|180000000000|180 billion}} tokens<ref name="QjTIc">{{cite arXiv |last1=Zhang |first1=Susan |last2=Roller |first2=Stephen |last3=Goyal |first3=Naman |last4=Artetxe |first4=Mikel |last5=Chen |first5=Moya |last6=Chen |first6=Shuohui |last7=Dewan |first7=Christopher |last8=Diab |first8=Mona |last9=Li |first9=Xian |last10=Lin |first10=Xi Victoria |last11=Mihaylov |first11=Todor |last12=Ott |first12=Myle |last13=Shleifer |first13=Sam |last14=Shuster |first14=Kurt |last15=Simig |first15=Daniel |last16=Koura |first16=Punit Singh |last17=Sridhar |first17=Anjali |last18=Wang |first18=Tianlu |last19=Zettlemoyer |first19=Luke |title=OPT: Open Pre-trained Transformer Language Models |eprint=2205.01068 |date=21 June 2022|class=cs.CL}}</ref> 
|310<ref name=":3" />|| {{partial success|Non-commercial research}}{{efn|The smaller models including 66B are publicly available, while the 175B model is available on request.}}
| GPT-3 architecture with some adaptations from Megatron
|-
|YaLM 100B || {{dts|June 2022}} || [[Yandex]] || {{sort|100000000000|100 billion}}<ref name="yalm-repo">{{Citation |last1=Khrushchev |first1=Mikhail |title=YaLM 100B |date=2022-06-22 |url=https://github.com/yandex/YaLM-100B |access-date=2023-03-18 |last2=Vasilev |first2=Ruslan |last3=Petrov |first3=Alexey |last4=Zinov |first4=Nikolay}}</ref>
|| 1.7TB<ref name="yalm-repo" /> || | || {{Yes|Apache 2.0}} || English-Russian model based on Microsoft's Megatron-LM.
|-
| Minerva || {{dts|June 2022}} || Google || {{sort|540000000000|540 billion}}<ref name="minerva-paper" /> || 38.5B tokens from webpages filtered for mathematical content and from papers submitted to the arXiv preprint server<ref name="minerva-paper">{{cite arXiv |last1=Lewkowycz |first1=Aitor |last2=Andreassen |first2=Anders |last3=Dohan |first3=David |last4=Dyer |first4=Ethan |last5=Michalewski |first5=Henryk |last6=Ramasesh |first6=Vinay |last7=Slone |first7=Ambrose |last8=Anil |first8=Cem |last9=Schlag |first9=Imanol |last10=Gutman-Solo |first10=Theo |last11=Wu |first11=Yuhuai |last12=Neyshabur |first12=Behnam |last13=Gur-Ari |first13=Guy |last14=Misra |first14=Vedant |title=Solving Quantitative Reasoning Problems with Language Models |date=30 June 2022 |class=cs.CL |eprint=2206.14858}}</ref>  
| || {{no|Proprietary}}
| LLM trained for solving "mathematical and scientific questions using step-by-step reasoning".<ref name="FfCNK">{{cite web |title=Minerva: Solving Quantitative Reasoning Problems with Language Models |url=https://ai.googleblog.com/2022/06/minerva-solving-quantitative-reasoning.html |website=ai.googleblog.com |date=30 June 2022 |access-date=20 March 2023 |language=en}}</ref> Minerva is based on PaLM model, further trained on mathematical and scientific data.
|-
| [[BLOOM (language model)|BLOOM]] || {{dts|July 2022}} || Large collaboration led by [[Hugging Face]] || {{sort|175000000000|175 billion}}<ref name="bigger-better">{{cite journal |journal=Nature |last=Ananthaswamy|first=Anil |title=In AI, is bigger always better? |date=8 March 2023 |volume=615 |issue=7951 |pages=202–205 |doi=10.1038/d41586-023-00641-w |pmid=36890378 |bibcode=2023Natur.615..202A |s2cid=257380916 |url=https://www.nature.com/articles/d41586-023-00641-w}}</ref> || {{sort|350000000000|350 billion}} tokens (1.6TB)<ref name="B8wB2">{{cite web |title=bigscience/bloom · Hugging Face |url=https://huggingface.co/bigscience/bloom |website=huggingface.co}}</ref> 
| || {{yes|Responsible AI}}
| Essentially GPT-3 but trained on a multi-lingual corpus (30% English excluding programming languages)
|-
| Galactica || {{dts|November 2022}} || [[Meta Platforms|Meta]] || {{sort|120000000000|120 billion}} || {{sort|350000000000|106 billion}} tokens<ref name="37sY6">{{cite arXiv |last1=Taylor |first1=Ross |last2=Kardas |first2=Marcin |last3=Cucurull |first3=Guillem |last4=Scialom |first4=Thomas |last5=Hartshorn |first5=Anthony |last6=Saravia |first6=Elvis |last7=Poulton |first7=Andrew |last8=Kerkez |first8=Viktor |last9=Stojnic |first9=Robert |title=Galactica: A Large Language Model for Science |date=16 November 2022 |class=cs.CL |eprint=2211.09085}}</ref> 
|unknown|| {{partial success|CC-BY-NC-4.0}}
| Trained on scientific text and modalities.
|-
| AlexaTM (Teacher Models) || {{dts|November 2022}} || [[Amazon (company)|Amazon]] || {{sort|20000000000|20 billion}}<ref name="u5szh">{{cite web |title=20B-parameter Alexa model sets new marks in few-shot learning |url=https://www.amazon.science/blog/20b-parameter-alexa-model-sets-new-marks-in-few-shot-learning |website=Amazon Science |language=en |date=2 August 2022}}</ref> || {{sort|1300000000000|1.3 trillion}}<ref name="HaA7l">{{cite arXiv |last1=Soltan |first1=Saleh |last2=Ananthakrishnan |first2=Shankar |last3=FitzGerald |first3=Jack |last4=Gupta |first4=Rahul |last5=Hamza |first5=Wael |last6=Khan |first6=Haidar |last7=Peris |first7=Charith |last8=Rawls |first8=Stephen |last9=Rosenbaum |first9=Andy |last10=Rumshisky |first10=Anna |last11=Prakash |first11=Chandana Satya |last12=Sridhar |first12=Mukund |last13=Triefenbach |first13=Fabian |last14=Verma |first14=Apurv |last15=Tur |first15=Gokhan |last16=Natarajan |first16=Prem |display-authors=3|title=AlexaTM 20B: Few-Shot Learning Using a Large-Scale Multilingual Seq2Seq Model |eprint=2208.01448 |date=3 August 2022|class=cs.CL}}</ref> 
| || {{no|proprietary}}<ref name="rpehM">{{cite web |title=AlexaTM 20B is now available in Amazon SageMaker JumpStart {{!}} AWS Machine Learning Blog |url=https://aws.amazon.com/blogs/machine-learning/alexatm-20b-is-now-available-in-amazon-sagemaker-jumpstart/ |website=aws.amazon.com |access-date=13 March 2023 |date=17 November 2022}}</ref>
| bidirectional sequence-to-sequence architecture
|-
| [[LLaMA]] (Large Language Model Meta AI) || {{dts|February 2023}} || [[Meta Platforms|Meta]] || {{sort|65000000000|65 billion}}<ref name=llama-blog/> || {{sort|1400000000000|1.4 trillion}}<ref name=llama-blog/> 
|6300<ref name=":5">{{Cite web |title=The Falcon has landed in the Hugging Face ecosystem |url=https://huggingface.co/blog/falcon |access-date=2023-06-20 |website=huggingface.co}}</ref>|| {{partial success|Non-commercial research}}{{efn|Facebook's license and distribution scheme restricted access to approved researchers, but the model weights were leaked and became widely available.}}
| Trained on a large 20-language corpus to aim for better performance with fewer parameters.<ref name=llama-blog/> Researchers from Stanford University trained a fine-tuned model based on LLaMA weights, called Alpaca.<ref name="KBedq">{{Cite web|url=https://crfm.stanford.edu/2023/03/13/alpaca.html|title=Stanford CRFM|website=crfm.stanford.edu}}</ref>
|-
| [[GPT-4]] || {{dts|March 2023}} || OpenAI || Exact number unknown{{efn|As stated in Technical report: "Given both the competitive landscape and the safety implications of large-scale models like GPT-4, this report contains no further details about the architecture (including model size), hardware, training compute, dataset construction, training method ..."<ref name="GPT4Tech">{{Cite web |date=2023 |title=GPT-4 Technical Report |url=https://cdn.openai.com/papers/gpt-4.pdf |website=[[OpenAI]] |access-date=March 14, 2023 |archive-date=March 14, 2023 |archive-url=https://web.archive.org/web/20230314190904/https://cdn.openai.com/papers/gpt-4.pdf |url-status=live}}</ref> }} || Unknown 
|| Unknown || {{no|proprietary}}
| Available for ChatGPT Plus users and used in [[GPT-4#Usage|several products]].
|-
|Cerebras-GPT
|{{dts|March 2023}}
|Cerebras
|{{sort|13000000000|13 billion}}<ref name="D0k2a">{{Cite web|url=https://www.cerebras.net/blog/cerebras-gpt-a-family-of-open-compute-efficient-large-language-models/|title=Cerebras-GPT: A Family of Open, Compute-efficient, Large Language Models|first=Nolan|last=Dey|date=March 28, 2023|website=Cerebras}}</ref>
| 
|270<ref name=":3" />|| {{yes|Apache 2.0}}
| Trained with Chinchilla formula.
|-
| Falcon || {{dts|March 2023}} || [[Technology Innovation Institute]] || {{sort|40000000000|40 billion}}<ref name="falcon">{{cite web |title=Abu Dhabi-based TII launches its own version of ChatGPT |url=https://fastcompanyme.com/news/abu-dhabi-based-tii-launches-its-own-version-of-chatgpt/ |website=tii.ae}}</ref> || 1 trillion tokens, from RefinedWeb (filtered web text corpus)<ref name="Xb1gq">{{Cite arXiv |last1=Penedo |first1=Guilherme |last2=Malartic |first2=Quentin |last3=Hesslow |first3=Daniel |last4=Cojocaru |first4=Ruxandra |last5=Cappelli |first5=Alessandro |last6=Alobeidli |first6=Hamza |last7=Pannier |first7=Baptiste |last8=Almazrouei |first8=Ebtesam |last9=Launay |first9=Julien |date=2023-06-01 |title=The RefinedWeb Dataset for Falcon LLM: Outperforming Curated Corpora with Web Data, and Web Data Only |class=cs.CL |eprint=2306.01116}}</ref> plus some "curated corpora".<ref name="gzTNw">{{Cite web |date=2023-06-09 |title=tiiuae/falcon-40b · Hugging Face |url=https://huggingface.co/tiiuae/falcon-40b |access-date=2023-06-20 |website=huggingface.co}}</ref> 
|2800<ref name=":5" />|| {{yes|Apache 2.0}}<ref name="Wmlcs">[https://www.businesswire.com/news/home/20230531005608/en/UAE’s-Falcon-40B-World’s-Top-Ranked-AI-Model-from-Technology-Innovation-Institute-is-Now-Royalty-Free UAE’s Falcon 40B, World’s Top-Ranked AI Model from Technology Innovation Institute, is Now Royalty-Free], 31 May 2023</ref>
| Training cost around 2700 petaFLOP-days, 75% that of GPT-3.
|-
| BloombergGPT || {{dts|March 2023}} || [[Bloomberg L.P.]] || {{sort|50000000000|50 billion}} || 363 billion token dataset based on Bloomberg's data sources, plus 345 billion tokens from general purpose datasets<ref name="nGOSu">{{Cite arXiv|title=BloombergGPT: A Large Language Model for Finance|first1=Shijie|last1=Wu|first2=Ozan|last2=Irsoy|first3=Steven|last3=Lu|first4=Vadim|last4=Dabravolski|first5=Mark|last5=Dredze|first6=Sebastian|last6=Gehrmann|first7=Prabhanjan|last7=Kambadur|first8=David|last8=Rosenberg|first9=Gideon|last9=Mann|date=March 30, 2023|class=cs.LG |eprint=2303.17564}}</ref> 
| || {{no|Proprietary}}
| LLM trained on financial data from proprietary sources, that "outperforms existing models on financial tasks by significant margins without sacrificing performance on general LLM benchmarks" 
|-
| PanGu-Σ || {{dts|March 2023}} || [[Huawei]] || {{sort|1085000000000|1.085 trillion}} || 329 billion tokens<ref name="9WSFw">{{Cite arXiv|title=PanGu-Σ: Towards Trillion Parameter Language Model with Sparse Heterogeneous Computing|first1=Xiaozhe|last1=Ren|first2=Pingyi|last2=Zhou|first3=Xinfan|last3=Meng|first4=Xinjing|last4=Huang|first5=Yadao|last5=Wang|first6=Weichao|last6=Wang|first7=Pengfei|last7=Li|first8=Xiaoda|last8=Zhang|first9=Alexander|last9=Podolskiy|first10=Grigory|last10=Arshinov|first11=Andrey|last11=Bout|first12=Irina|last12=Piontkovskaya|first13=Jiansheng|last13=Wei|first14=Xin|last14=Jiang|first15=Teng|last15=Su|first16=Qun|last16=Liu|first17=Jun|last17=Yao|date=March 19, 2023|class=cs.CL |eprint=2303.10845}}</ref> 
| || {{no|Proprietary}}
| 
|-
| OpenAssistant<ref name="JiOl8">{{Cite arXiv |last1=Köpf |first1=Andreas |last2=Kilcher |first2=Yannic |last3=von Rütte |first3=Dimitri |last4=Anagnostidis |first4=Sotiris |last5=Tam |first5=Zhi-Rui |last6=Stevens |first6=Keith |last7=Barhoum |first7=Abdullah |last8=Duc |first8=Nguyen Minh |last9=Stanley |first9=Oliver |last10=Nagyfi |first10=Richárd |last11=ES |first11=Shahul |last12=Suri |first12=Sameer |last13=Glushkov |first13=David |last14=Dantuluri |first14=Arnav |last15=Maguire |first15=Andrew |date=2023-04-14 |title=OpenAssistant Conversations -- Democratizing Large Language Model Alignment |class=cs.CL |eprint=2304.07327}}</ref> || {{dts|March 2023}} || [[LAION]] || {{sort|17000000000|17 billion}} || 1.5 trillion tokens 
| || {{yes|Apache 2.0}}
| Trained on crowdsourced open data
|-
|Jurassic-2<ref>{{Cite web |last=Wrobel |first=Sharon |title=Tel Aviv startup rolls out new advanced AI language model to rival OpenAI |url=https://www.timesofisrael.com/ai21-labs-rolls-out-new-advanced-ai-language-model-to-rival-openai/ |access-date=2023-07-24 |website=www.timesofisrael.com |language=en-US}}</ref>
|{{dts|March 2023}}
|[[AI21 Labs]]
|Exact size unknown
|Unknown
| || {{no|Proprietary}}
|Multilingual<ref>{{Cite web |last=Wiggers |first=Kyle |date=2023-04-13 |title=With Bedrock, Amazon enters the generative AI race |url=https://techcrunch.com/2023/04/13/with-bedrock-amazon-enters-the-generative-ai-race/ |access-date=2023-07-24 |website=TechCrunch |language=en-US}}</ref> 
|-
| [[PaLM|PaLM 2]] (Pathways Language Model 2) || {{dts|May 2023}} || Google || {{sort|340000000000|340 billion}}<ref name="cnbc-20230516">{{cite web |last=Elias |first=Jennifer |url=https://www.cnbc.com/2023/05/16/googles-palm-2-uses-nearly-five-times-more-text-data-than-predecessor.html |title=Google's newest A.I. model uses nearly five times more text data for training than its predecessor |work=[[CNBC]] |date=16 May 2023 |access-date=18 May 2023}}</ref> || {{sort|3600000000000|3.6 trillion}} tokens<ref name="cnbc-20230516" /> 
|85000<ref name=":5" />|| {{no|Proprietary}}
| Used in [[Bard (chatbot)|Bard chatbot]].<ref name="pWyLA">{{Cite web|url=https://blog.google/technology/ai/google-palm-2-ai-large-language-model/|title=Introducing PaLM 2|date=May 10, 2023|website=Google}}</ref>
|-
| Llama 2 || {{dts|July 2023}} || Meta || {{sort|70000000000|70 billion}}<ref name="meta-20230719">{{Cite web | url = https://ai.meta.com/llama/ | title = Introducing Llama 2: The Next Generation of Our Open Source Large Language Model | access-date = 2023-07-19 | website = Meta AI | language = en | date = 2023}}</ref> || {{sort|2000000000000|2 trillion}} tokens<ref name="meta-20230719" /> 
| || {{partial success|Llama 2 license}}
| Successor of LLaMA.
|}

== Further reading ==
* [[Dan Jurafsky|Jurafsky, Dan]], Martin, James. H. [https://web.stanford.edu/~jurafsky/slp3/ed3book_jan72023.pdf ''Speech and Language Processing: An Introduction to Natural Language Processing, Computational Linguistics, and Speech Recognition''], 3rd Edition draft, 2023. 
* {{cite arXiv |eprint=2207.09238 |class=cs.LG |first1=Mary |last1=Phuong |first2=Marcus |last2=Hutter |title=Formal Algorithms for Transformers |date=2022}}
* {{cite arXiv |eprint=2303.10130 |class=econ.GN |first1=Tyna |last1=Eloundou |first2=Sam |last2=Manning |title=GPTs are GPTs: An Early Look at the Labor Market Impact Potential of Large Language Models |last3=Mishkin |first3=Pamela |last4=Rock |first4=Daniel |year=2023}}
* {{cite arXiv |last1=Eldan |first1=Ronen |last2=Li |first2=Yuanzhi |title=TinyStories: How Small Can Language Models Be and Still Speak Coherent English? |date=2023 |class=cs.CL |eprint=2305.07759}}
* {{cite journal |last1=Frank |first1=Michael C. |title=Baby steps in evaluating the capacities of large language models |journal=Nature Reviews Psychology |date=27 June 2023 |volume=2 |issue=8 |pages=451–452 |doi=10.1038/s44159-023-00211-x |s2cid=259713140 |url=https://www.nature.com/articles/s44159-023-00211-x |access-date=2 July 2023 |language=en |issn=2731-0574}}
* {{cite arXiv |last1=Zhao |first1=Wayne Xin |last2=Zhou |first2=Kun |last3=Li |first3=Junyi |display-authors=1 |title=A Survey of Large Language Models |date=2023 |class=cs.CL |eprint=2303.18223 }}
* {{cite arXiv |last1=Kaddour |first1=Jean |display-authors=etal |title=Challenges and Applications of Large Language Models |date=2023 |class=cs.CL |eprint=2307.10169 }}

== See also ==
* [[Foundation models]]
* [[Generative artificial intelligence|Generative AI]]
* [[Natural language processing#General tendencies and (possible) future directions|Cognitive NLP]]

== Notes ==
{{notelist}}

== References ==
{{reflist|refs=
<!-- Refs below are specific to the "List of large language models" section. (Keeping separate in case that section is split off into a standalone list article in the future.) -->
<ref name=palm-blog>{{Cite web |last1=Narang |first1=Sharan |last2=Chowdhery |first2=Aakanksha |date=April 4, 2022 |title=Pathways Language Model (PaLM): Scaling to 540 Billion Parameters for Breakthrough Performance |url=https://ai.googleblog.com/2022/04/pathways-language-model-palm-scaling-to.html |access-date=2023-03-09 |website=ai.googleblog.com |language=en
}}</ref>
<ref name=glam-blog>{{Cite web |last1=Dai |first1=Andrew M |last2=Du |first2=Nan |date=December 9, 2021 |title=More Efficient In-Context Learning with GLaM |url=https://ai.googleblog.com/2021/12/more-efficient-in-context-learning-with.html |access-date=2023-03-09 |website=ai.googleblog.com |language=en}}</ref>
<ref name=lamda-blog>{{Cite web |last1=Cheng |first1=Heng-Tze |last2=Thoppilan |first2=Romal |date=January 21, 2022 |title=LaMDA: Towards Safe, Grounded, and High-Quality Dialog Models for Everything |url=https://ai.googleblog.com/2022/01/lamda-towards-safe-grounded-and-high.html |access-date=2023-03-09 |website=ai.googleblog.com |language=en}}</ref>
<ref name=mtnlg-preprint>{{Cite arXiv |last1=Smith |first1=Shaden |last2=Patwary |first2=Mostofa |last3=Norick |first3=Brandon |last4=LeGresley |first4=Patrick |last5=Rajbhandari |first5=Samyam |last6=Casper |first6=Jared |last7=Liu |first7=Zhun |last8=Prabhumoye |first8=Shrimai |last9=Zerveas |first9=George |last10=Korthikanti |first10=Vijay |last11=Zhang |first11=Elton |last12=Child |first12=Rewon |last13=Aminabadi |first13=Reza Yazdani |last14=Bernauer |first14=Julie |last15=Song |first15=Xia |date=2022-02-04 |title=Using DeepSpeed and Megatron to Train Megatron-Turing NLG 530B, A Large-Scale Generative Language Model |class=cs.CL |eprint=2201.11990 }}</ref>
<ref name=llama-blog>{{cite web
|work=Meta AI
|title=Introducing LLaMA: A foundational, 65-billion-parameter large language model
|date=24 February 2023
|url=https://ai.facebook.com/blog/large-language-model-llama-meta-ai/
}}</ref>
<ref name="15Brelease">{{Cite web
 |url          = https://openai.com/blog/gpt-2-1-5b-release/
 |title        = GPT-2: 1.5B Release
 |date         = 2019-11-05
 |website      = OpenAI
 |language     = en
 |access-date  = 2019-11-14
 |archive-date = 2019-11-14
 |archive-url  = https://web.archive.org/web/20191114074358/https://openai.com/blog/gpt-2-1-5b-release/
 |url-status   = live
}}</ref>
<ref name=chinchilla-blog>{{cite web
|work=Deepmind Blog
|title=An empirical analysis of compute-optimal large language model training
|first1=Jordan|last1=Hoffmann|first2=Sebastian|last2=Borgeaud
|first3=Arthur|last3=Mensch|first4=Laurent|last4=Sifre
|date=12 April 2022
|url=https://www.deepmind.com/blog/an-empirical-analysis-of-compute-optimal-large-language-model-training
}}</ref>
<ref name=bert-paper>{{cite arXiv |last1=Devlin |first1=Jacob |last2=Chang |first2=Ming-Wei |last3=Lee |first3=Kenton |last4=Toutanova |first4=Kristina |title=BERT: Pre-training of Deep Bidirectional Transformers for Language Understanding |date=11 October 2018 |eprint=1810.04805v2|class=cs.CL }}</ref>
<ref name=chatgpt-blog>{{Cite web |date=2022-11-30 |title=ChatGPT: Optimizing Language Models for Dialogue |url=https://openai.com/blog/chatgpt/ |access-date=2023-01-13 |website=OpenAI |language=en}}</ref>
<ref name=vb-gpt-neo>{{cite web
|work=VentureBeat
|last=Iyer|first=Abhishek
|title=GPT-3's free alternative GPT-Neo is something to be excited about
|date=15 May 2021
|url=https://venturebeat.com/ai/gpt-3s-free-alternative-gpt-neo-is-something-to-be-excited-about/
}}</ref>
}}

{{Natural language processing}}

[[Category:Large language models| ]]
[[Category:Deep learning]]
[[Category:Natural language processing]]